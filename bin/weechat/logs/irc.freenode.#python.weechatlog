2019-02-02 09:16:11	-->	gwosix (~gwosix@112.209.186.56) has joined #python
2019-02-02 09:16:11	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://paste.pound-python.org/ | Be nice: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Local user groups: https://j.mp/1Mq06bF | #python-fr #python.de #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu #python-dk"
2019-02-02 09:16:11	--	Topic set by Yhg1s (thomas@python/psf/thomas) on Thu, 22 Nov 2018 22:08:55
2019-02-02 09:16:11	--	Channel #python: 1880 nicks (0 ops, 0 voices, 1880 normals)
2019-02-02 09:16:13	--	Channel created on Sun, 26 Nov 2006 14:42:41
2019-02-02 09:16:16	-->	xdruppi (b517d94d@gateway/web/freenode/ip.181.23.217.77) has joined #python
2019-02-02 09:16:20	FunkyBob	yes... encryption over TCP connections
2019-02-02 09:16:31	gwosix	i'm having an anurism...
2019-02-02 09:16:46	xdruppi	how do i read files, and the write output of a function to that same file in click?
2019-02-02 09:16:49	gwosix	please tell me there is a way of changing the default python usersite
2019-02-02 09:16:58	sparrowsword	FunkyBob: isnt that like trying to go to an https site when there is only http?
2019-02-02 09:17:03	<--	}ls{ (~kalle@unaffiliated/ls/x-8089558) has quit (Remote host closed the connection)
2019-02-02 09:17:13	 *	gwosix cries out in pain
2019-02-02 09:17:13	FunkyBob	sparrowsword: HTTPS is just HTTP through TLS over a TCP socket
2019-02-02 09:17:22	<--	jordanthedev (~jordan@2600:1700:7822:620::4bf) has quit (Quit: WeeChat 2.3)
2019-02-02 09:17:28	FunkyBob	anyway.. AFK
2019-02-02 09:17:40	<--	ackpacket (~ackpacket@unaffiliated/ackpacket) has quit (Quit: My puter has gone to sleep. ZZZzzz…)
2019-02-02 09:19:03	gwosix	guys, is there a way to change the default user-site?
2019-02-02 09:19:17	-->	ackpacket (~ackpacket@unaffiliated/ackpacket) has joined #python
2019-02-02 09:19:40	altendky	gwosix: what do you want to do that for
2019-02-02 09:20:01	<--	veid (~veid@c-73-97-164-11.hsd1.wa.comcast.net) has quit (Quit: This computer has gone to sleep)
2019-02-02 09:21:00	-->	xuib (xuib@gateway/vpn/protonvpn/xuib) has joined #python
2019-02-02 09:21:01	<--	sydbarret (~Username@unaffiliated/sydbarret) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2019-02-02 09:21:10	--	grepRoot is now known as dotgourav
2019-02-02 09:21:13	very_sneaky	there's something I'm not understanding about absolute references to modules. This is my folder structure: https://paste.pound-python.org/show/rBxcaGqcC4LypqOSFToo/
2019-02-02 09:22:17	<--	ackpacket (~ackpacket@unaffiliated/ackpacket) has quit (Client Quit)
2019-02-02 09:22:39	very_sneaky	the python tutorial on modules: https://docs.python.org/3/tutorial/modules.html indicates that in secdb.vendors.iex.py, I should be able to run "import secdb.vendors.asxh", but this doesn't work. Additionally, importing secdb.secdb from tests/test_secdb.py doesn't work. Do I have to add a path variable somewhere?
2019-02-02 09:22:43	<--	jlf (~jlf@pdpc/supporter/active/jlf) has quit (Ping timeout: 246 seconds)
2019-02-02 09:22:58	gwosix	altendky: i don't want my `~/.local` filled with pythons directories. with PYTHONUSERBASE i can move everything to `$XDG_DATA_HOME/python` but if i have to symlink the `$PYTHONUSERBASE/lib{64,32}` to the respective defaults it defeats the point...
2019-02-02 09:23:09	grym	very_sneaky: put an __init__.py in tests/
2019-02-02 09:23:13	altendky	very_sneaky: you should work in a virtualenv or venv and install your code into it
2019-02-02 09:23:25	very_sneaky	altendky: I do, I've excluded it for brevity
2019-02-02 09:24:12	<--	miz- (~miz-@unaffiliated/miz-) has quit (Remote host closed the connection)
2019-02-02 09:24:13	<--	hgrsd (~daniel@cpc110797-lewi20-2-0-cust197.2-4.cable.virginm.net) has quit (Ping timeout: 245 seconds)
2019-02-02 09:24:18	grym	gwosix: venvs live and install their packages wherever you want them to
2019-02-02 09:24:19	very_sneaky	grym: will do, but I have the same issue with source files in secdb/secdb/, it doesn't recognise that secdb is a package, i'm having to use "import vendors.asxh"
2019-02-02 09:24:28	altendky	very_sneaky: share your setup.py
2019-02-02 09:24:32	-->	ackpacket (~ackpacket@unaffiliated/ackpacket) has joined #python
2019-02-02 09:24:50	very_sneaky	altendky: currently just a placeholder, does populating it affect module imports?
2019-02-02 09:24:54	grym	very_sneaky: and do your __init__.pys have anything in them?
2019-02-02 09:24:54	altendky	very_sneaky: it seems like your code isn't installed in the other you are running.
2019-02-02 09:24:55	very_sneaky	(i.e. empty)
2019-02-02 09:25:05	very_sneaky	init's are empty
2019-02-02 09:25:06	altendky	very_sneaky: then you haven't actually installed your code?
2019-02-02 09:25:16	very_sneaky	perhaps not? I'm new to the process
2019-02-02 09:25:36	altendky	very_sneaky: yes, you need stuff in setup.py to install your code
2019-02-02 09:25:36	gwosix	grym pip packages? + gentoo stops you from executing `pip install` because you mighight break emerge, so i have to resort to user
2019-02-02 09:26:06	very_sneaky	altendky: is that required to import modules as discussed in the documentation?
2019-02-02 09:26:15	<--	ackpacket (~ackpacket@unaffiliated/ackpacket) has quit (Client Quit)
2019-02-02 09:26:21	altendky	gwosix: with in virtualenvs or venvs. Don't run your system pip
2019-02-02 09:26:31	-->	}ls{ (~kalle@unaffiliated/ls/x-8089558) has joined #python
2019-02-02 09:26:31	altendky	very_sneaky: not installed imports are fiddly
2019-02-02 09:26:34	-->	renich_ (~renich@91.92.71.51) has joined #python
2019-02-02 09:26:44	gwosix	altendky it doesn't matter which pip i use
2019-02-02 09:26:52	altendky	gwosix: it does
2019-02-02 09:26:53	very_sneaky	ah. I've read something about "adding my project to my path"
2019-02-02 09:26:59	grym	gwosix: if you're talking about things you'd like to have around as cli utils (like youtube-dl or whatever), there's https://github.com/mitsuhiko/pipsi
2019-02-02 09:27:00	very_sneaky	is there anything to consider there?
2019-02-02 09:27:10	<--	renich (~renich@177.240.230.53) has quit (Ping timeout: 244 seconds)
2019-02-02 09:27:14	altendky	gwosix: the one in the env will install in the env
2019-02-02 09:27:29	-->	SynSynack1 (~Thunderbi@198-48-206-232.cpe.pppoe.ca) has joined #python
2019-02-02 09:27:39	altendky	very_sneaky: no, work in a virtualenv or venv and install your code
2019-02-02 09:27:52	<--	chaoscon (~jeremy@smartserv/ceo/chaoscon) has quit (Ping timeout: 252 seconds)
2019-02-02 09:27:55	very_sneaky	okay, i'll read more about installation
2019-02-02 09:27:58	very_sneaky	cheers
2019-02-02 09:28:20	altendky	very_sneaky: it's not the only way to import code. It's a good way to work though
2019-02-02 09:28:25	<--	__charly__ (~charly@104-184-3-192.lightspeed.austtx.sbcglobal.net) has quit (Quit: ZZZ)
2019-02-02 09:28:39	grym	gwosix: also i'm delighted to hear that gentoo sets PIP_REQUIRE_VIRTUALENVIRONMENT.  hardly anyone does
2019-02-02 09:28:55	very_sneaky	yeah, i mean i put it there as an intention to implement, i thought it was just more relevant to distributing on pypi
2019-02-02 09:29:09	gwosix	pipsi still installs into `./local`, grym
2019-02-02 09:29:15	<--	SynSynack (~Thunderbi@198-48-206-232.cpe.pppoe.ca) has quit (Ping timeout: 246 seconds)
2019-02-02 09:29:51	-->	SynSynack (~Thunderbi@198-48-206-232.cpe.pppoe.ca) has joined #python
2019-02-02 09:29:52	grym	gwosix: why do you have a fixation against the use of nice hidden directories in your homedir?
2019-02-02 09:30:04	grym	gwosix: and you can configure pipsi root i'm pretty sure
2019-02-02 09:30:15	altendky	very_sneaky: it's required at that point, it's useful almost immediately when working on a project
2019-02-02 09:30:25	grym	gwosix: yeah, and it says so in the readme, and how to do it...
2019-02-02 09:30:32	grym	gwosix: https://github.com/mitsuhiko/pipsi#how-does-it-work
2019-02-02 09:31:05	very_sneaky	altendky: yep ok, cheers
2019-02-02 09:31:27	<--	him-cesjf (~cesjf@unaffiliated/himcesjf) has quit (Ping timeout: 240 seconds)
2019-02-02 09:31:45	<--	dale (~dale@unaffiliated/dale) has quit (Quit: dale)
2019-02-02 09:31:45	-->	him-cesjf (~cesjf@unaffiliated/himcesjf) has joined #python
2019-02-02 09:31:58	<--	SynSynack1 (~Thunderbi@198-48-206-232.cpe.pppoe.ca) has quit (Ping timeout: 250 seconds)
2019-02-02 09:32:05	gwosix	> why do you have a fixation against the use of nice hidden directories in your homedir?
2019-02-02 09:32:12	gwosix	i'm a gentoo user.
2019-02-02 09:32:25	grym	gwosix: i have gentoo boxes, too.
2019-02-02 09:32:33	grym	gwosix: this has nothing to do with -O500000
2019-02-02 09:32:36	grym	what's the problem :D
2019-02-02 09:32:45	altendky	very_sneaky: the packaging experience isn't great, we'll gladly guide you through a useful path.  :]  Hopefully helping you avoid some pain.
2019-02-02 09:33:21	-->	ackpacket (~ackpacket@unaffiliated/ackpacket) has joined #python
2019-02-02 09:33:32	<--	frrs (uid130725@gateway/web/irccloud.com/x-mullokoirdbvyxsk) has quit (Quit: Connection closed for inactivity)
2019-02-02 09:33:40	-->	routingsparks (~routingsp@pool-108-17-147-17.nrflva.fios.verizon.net) has joined #python
2019-02-02 09:34:00	<--	Haudegen (~quassel@178.115.237.87.static.drei.at) has quit (Remote host closed the connection)
2019-02-02 09:34:29	gwosix	grym, nothing else uses that directory. everything else resorts on making there own entry in `$XDG_DATA_HOME` why can't python do the same >:(
2019-02-02 09:34:39	-->	wingsorc (~wingsorc@unaffiliated/wingsorc) has joined #python
2019-02-02 09:34:56	grym	gwosix: just set the env var, and submit a PR
2019-02-02 09:34:57	-->	monksam (~monksam@gateway/tor-sasl/monksam) has joined #python
2019-02-02 09:35:15	<--	qlixed (~qlixed@190.2.28.97) has quit (Remote host closed the connection)
2019-02-02 09:35:20	<--	ackpacket (~ackpacket@unaffiliated/ackpacket) has quit (Client Quit)
2019-02-02 09:35:36	grym	gwosix: i've lost count/track of the number of dot-things floating around, and kind of stopped caring, personally.
2019-02-02 09:35:46	gwosix	grym: what do you mean by env var?
2019-02-02 09:36:08	grym	gwosix: environment variable
2019-02-02 09:36:23	grym	gwosix: you just typed one out, for instance
2019-02-02 09:36:39	gwosix	XDG_DATA_HOME?
2019-02-02 09:37:05	-->	Guddu (~Guddu@unaffiliated/guddu) has joined #python
2019-02-02 09:37:09	altendky	And PATH, etc
2019-02-02 09:37:58	grym	and in this case, PIPSI_HOME and PIPSI_BIN_DIR
2019-02-02 09:38:16	grym	"reasons why I version my .zshrc" ^
2019-02-02 09:38:54	gwosix	yeah
2019-02-02 09:39:35	energizer	grym: the origin of dotfiles https://plus.google.com/101960720994009339267/posts/R58WgWwN9jp
2019-02-02 09:40:18	grym	energizer: i tripped across that a bit ago.  better archive it before april!
2019-02-02 09:40:47	<--	sgtlion (~sgtsomebo@116.187.198.146.dyn.plus.net) has quit (Remote host closed the connection)
2019-02-02 09:41:05	energizer	https://archive.fo/4kpvd
2019-02-02 09:41:41	<--	keepguessing (~superman@208.91.3.26) has quit (Quit: WeeChat 1.9.1)
2019-02-02 09:41:58	<--	Coldragon (~Coldragon@138.215.7.93.rev.sfr.net) has quit (Read error: Connection reset by peer)
2019-02-02 09:42:11	<--	wildlander (~wildlande@unaffiliated/wildlander) has quit (Quit: Konversation terminated!)
2019-02-02 09:42:42	<--	btop (~btop@12.139.173.251) has quit (Ping timeout: 268 seconds)
2019-02-02 09:43:21	-->	rasusto (~rasusto@64.121.15.242) has joined #python
2019-02-02 09:44:09	<--	}ls{ (~kalle@unaffiliated/ls/x-8089558) has quit (Remote host closed the connection)
2019-02-02 09:44:16	--	dotgourav is now known as gouravchawla
2019-02-02 09:45:52	<--	gouravchawla (~grepRoot@112.196.171.22) has quit (Quit: Leaving)
2019-02-02 09:45:54	-->	wildlander (~wildlande@unaffiliated/wildlander) has joined #python
2019-02-02 09:46:33	-->	spacepup (~spacepup@pool-72-83-155-200.washdc.fios.verizon.net) has joined #python
2019-02-02 09:46:44	xdruppi	why is the word "input" marked on python?
2019-02-02 09:46:46	xdruppi	is it a keyword?
2019-02-02 09:46:53	<--	waveform (~waveform@waveform.plus.com) has quit (Quit: Leaving)
2019-02-02 09:47:13	<--	css (~css@unaffiliated/css) has quit (Quit: ChatZilla 0.9.93 [Firefox 56.0/20170929190952])
2019-02-02 09:47:17	grym	xdruppi: yes
2019-02-02 09:47:24	-->	dotgourav (~dotgourav@112.196.171.22) has joined #python
2019-02-02 09:47:30	grym	well, it's a function
2019-02-02 09:47:44	xdruppi	grym: what does it do?
2019-02-02 09:47:52	Ninpo	takes input..
2019-02-02 09:47:53	xdruppi	can i use it for whatever it is not?
2019-02-02 09:48:08	grym	xdruppi: you can reassign nearly any name; you probably shouldn't
2019-02-02 09:48:09	-->	__charly__ (~charly@104-184-3-192.lightspeed.austtx.sbcglobal.net) has joined #python
2019-02-02 09:48:24	grym	xdruppi: and in a repl, help(input)
2019-02-02 09:49:11	<--	divno (~divno@unaffiliated/divno) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2019-02-02 09:49:20	<--	jll94 (a5a6216a@gateway/web/freenode/ip.165.166.33.106) has quit (Quit: Page closed)
2019-02-02 09:49:25	<--	bast3h (~basteh@unaffiliated/basteh) has quit (Read error: Connection reset by peer)
2019-02-02 09:49:28	<--	syscaller (~syscaller@snegw.os3.su) has quit (Remote host closed the connection)
2019-02-02 09:49:41	-->	syscaller (~syscaller@snegw.os3.su) has joined #python
2019-02-02 09:50:38	<--	sinecast (~sinecast@209.97.182.97) has quit (Ping timeout: 268 seconds)
2019-02-02 09:50:44	-->	btop (~btop@12.139.173.251) has joined #python
2019-02-02 09:50:56	<--	kurahaupo (~kurahaupo@115-189-86-92.mobile.spark.co.nz) has quit (Ping timeout: 240 seconds)
2019-02-02 09:51:19	-->	ackpacket (~ackpacket@unaffiliated/ackpacket) has joined #python
2019-02-02 09:51:29	<--	Jigsy (~Jigsy@unaffiliated/jigsy) has quit (Disconnected by services)
2019-02-02 09:51:36	-->	Jigsy` (~Jigsy@unaffiliated/jigsy) has joined #python
2019-02-02 09:52:14	-->	Guest12095 (~daniel@71.69.149.82) has joined #python
2019-02-02 09:52:21	<--	codesoup (~codesoup@174.119.180.211) has quit (Remote host closed the connection)
2019-02-02 09:52:56	<--	braincrash (~braincras@62.48.233.234) has quit (Ping timeout: 240 seconds)
2019-02-02 09:53:07	-->	}ls{ (~kalle@unaffiliated/ls/x-8089558) has joined #python
2019-02-02 09:53:16	<--	kevr_ (~kevr@unaffiliated/kevr) has quit (Ping timeout: 250 seconds)
2019-02-02 09:53:29	--	Jigsy` is now known as Jigsy
2019-02-02 09:54:21	-->	tdy (~tdy@unaffiliated/tdy) has joined #python
2019-02-02 09:54:57	-->	kevr_ (~kevr@unaffiliated/kevr) has joined #python
2019-02-02 09:55:00	-->	rkazak (~rkazak@c-71-202-98-21.hsd1.ca.comcast.net) has joined #python
2019-02-02 09:55:02	-->	sinecast (~sinecast@209.97.182.97) has joined #python
2019-02-02 09:55:11	-->	braincrash (~braincras@62.48.233.234) has joined #python
2019-02-02 09:55:25	-->	Shaba1 (~Shaba1@wsip-72-196-170-7.sd.sd.cox.net) has joined #python
2019-02-02 09:55:42	Shaba1	Hello all.
2019-02-02 09:55:54	-->	libertyprime (~libertypr@101.98.42.91) has joined #python
2019-02-02 09:57:24	Shaba1	Will someone take a look at this code.
2019-02-02 09:57:26	Shaba1	https://pastebin.com/UbdZZXef
2019-02-02 09:57:38	<--	carc1n0gen (~carc1n0ge@CPE64777db324c3-CM64777db324c0.cpe.net.fido.ca) has quit (Read error: Connection reset by peer)
2019-02-02 09:57:40	Ninpo	Is there a faster way of doing any(ord(char) > 127 for char in string) to look for non ascii characters?
2019-02-02 09:57:53	-->	kurahaupo (~kurahaupo@118.148.187.125) has joined #python
2019-02-02 09:58:01	nedbat	Ninpo: why are you looking for them?
2019-02-02 09:58:14	Shaba1	It is a command line prototype for a wxpython program that I am writing. I thought I had better get the backend code working first then add all the gui components.
2019-02-02 09:58:16	Ninpo	I'm decoding what are _supposed_ to be cp1252 bytes but might be encoded incorrectly and have utf8 characters in there
2019-02-02 09:58:17	-->	ferdna (~ferdna@cpe-69-23-132-115.elp.res.rr.com) has joined #python
2019-02-02 09:58:34	Shaba1	It does work. Here is a link for the output.
2019-02-02 09:58:39	Ninpo	if decode('utf-8') is successful I'm checking if the string is all ascii (therefore fine) or not (therefore utf8 and badly encoded)
2019-02-02 09:58:40	-->	MoarSpaceFi (~Forgot_my@65.126.126.193) has joined #python
2019-02-02 09:58:46	nedbat	Ninpo: why not just use .decode?
2019-02-02 09:58:55	Shaba1	https://pastebin.com/pYLutSJy
2019-02-02 09:58:55	KirkMcDonald	Ninpo: You could attempt to decode it as ASCII.
2019-02-02 09:58:58	Ninpo	nedbat: I am using .decode, I'm not sure what you mean
2019-02-02 09:59:05	-->	cnsvc (~cnsvc@gateway/tor-sasl/cnsvc) has joined #python
2019-02-02 09:59:09	Shaba1	But ot me it just looks 'ugly'
2019-02-02 09:59:10	nedbat	Ninpo: why look for non-ascii then?
2019-02-02 09:59:26	Ninpo	ok, mysql database.  Text/char column set up as latin1.  Stupid app dumps utf8 chars in.
2019-02-02 09:59:26	<--	rkazak (~rkazak@c-71-202-98-21.hsd1.ca.comcast.net) has quit (Ping timeout: 240 seconds)
2019-02-02 09:59:34	<--	pedahzur (~jkugler@216-67-98-32.static.acsalaska.net) has quit
2019-02-02 09:59:40	Shaba1	can someone give some suggestions as to good programming style.
2019-02-02 09:59:43	Ninpo	(mysql latin1 really meaning cp1252)
2019-02-02 09:59:51	Shaba1	As I said it does actually work.
2019-02-02 09:59:52	-->	swaggboi (~swaggboi@2601:14a:4501:2eb1:3e97:eff:fec1:f0ee) has joined #python
2019-02-02 10:00:08	KirkMcDonald	Ninpo: Like: try: s = b.decode("ascii");; except UnicodeDecodeError: ...
2019-02-02 10:00:11	Ninpo	so if decoding as utf8 fails I assume latin1.  If it succeeds that leaves me with all ascii, or ascii+utf8 mix
2019-02-02 10:00:49	<--	rholloway (~rholloway@2601:c8:c200:110:6462:b44e:57d6:be06) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-02-02 10:00:51	Ninpo	KirkMcDonald: so try to decode as ascii, if yes move on, if not try to decode as utf8 if yes: problem if no must be cp1252 let's go (assumptions based on my knowledge of the DB, not absolute)
2019-02-02 10:01:31	Ninpo	Don't you just hate it when someone makes an "omg of course" suggestion :D thank you KirkMcDonald
2019-02-02 10:02:20	-->	comingsoontm (~comingsoo@162.247.169.114) has joined #python
2019-02-02 10:02:25	<--	efm (~efm@vpn.tummy.com) has quit (Read error: Connection reset by peer)
2019-02-02 10:02:34	<--	paradoxguitarist (uid288518@gateway/web/irccloud.com/x-eblwnomqlhudlate) has quit (Quit: Connection closed for inactivity)
2019-02-02 10:02:37	<--	redcrusader (cf3eaad1@gateway/web/freenode/ip.207.62.170.209) has quit (Quit: Page closed)
2019-02-02 10:02:37	-->	codesoup (~codesoup@174.119.180.211) has joined #python
2019-02-02 10:02:58	-->	jlf (~jlf@pdpc/supporter/active/jlf) has joined #python
2019-02-02 10:03:20	<--	birkoff (~birkoff@unaffiliated/birkoff) has quit (Ping timeout: 244 seconds)
2019-02-02 10:03:23	<--	Thracium (~Thracium@186-24-14-241.static.telcel.net.ve) has quit (Quit: leaving)
2019-02-02 10:04:10	Ninpo	What's the pythonic way to try: decode_as_ascii; except UnicodeDecodeError: decode_as_utf8; except UnicodeDecodeError: must_be_cp1252; continue
2019-02-02 10:04:26	<--	sinecast (~sinecast@209.97.182.97) has quit (Ping timeout: 240 seconds)
2019-02-02 10:04:33	Ninpo	or is it just nest another try/except in the original except?
2019-02-02 10:04:36	<--	kurahaupo (~kurahaupo@118.148.187.125) has quit (Ping timeout: 246 seconds)
2019-02-02 10:04:53	nedbat	Ninpo: yes, nest them as needed
2019-02-02 10:05:12	altendky	Maybe I missed something, but why bother trying ascii if the follow up is utf-8?
2019-02-02 10:05:49	Ninpo	I may have those the wrong way around :D
2019-02-02 10:05:55	altendky	Since anything ascii would be handled correctly by utf8
2019-02-02 10:06:12	<--	btop (~btop@12.139.173.251) has quit (Ping timeout: 250 seconds)
2019-02-02 10:06:13	Ninpo	yeah you're right, if utf8 succeeds I should then try ascii
2019-02-02 10:06:19	Ninpo	not other way around
2019-02-02 10:06:29	altendky	Ninpo: that makes less sense
2019-02-02 10:06:33	Ninpo	why..
2019-02-02 10:06:38	-->	btop (~btop@12.139.173.251) has joined #python
2019-02-02 10:06:47	altendky	If utf-8 fails, ascii will never succeed
2019-02-02 10:06:55	<--	ackpacket (~ackpacket@unaffiliated/ackpacket) has quit (Quit: My puter has gone to sleep. ZZZzzz…)
2019-02-02 10:06:57	Ninpo	I didn't say if utf8 fails
2019-02-02 10:06:58	altendky	Ascii is a subset of utf-8
2019-02-02 10:07:01	Ninpo	I said if utf8 succeeds
2019-02-02 10:07:16	Ninpo	02:06:13           Ninpo | yeah you're right, if utf8 succeeds I should then try ascii
2019-02-02 10:07:29	altendky	Ninpo: uhm...I guess I missed something. Is the point not to decode?
2019-02-02 10:07:43	Ninpo	The point is to find utf8 chars in something that is claiming to be cp1262
2019-02-02 10:07:46	Ninpo	cp1252*
2019-02-02 10:07:52	<--	gehn (gehn@gateway/vpn/privateinternetaccess/gehn) has quit (Quit: Leaving)
2019-02-02 10:08:06	Ninpo	You were right, I had the check order wrong.
2019-02-02 10:08:18	altendky	Find individual chars?hmm...
2019-02-02 10:08:30	Ninpo	No, individual chars is too slow
2019-02-02 10:08:44	Ninpo	I just need to know if what's there is _not_ cp1252 unfortunately, it will decode even with utf8
2019-02-02 10:09:20	-->	uptick (~rue@2001-b011-1000-1234-18e1-7108-8130-06eb.dynamic-ip6.hinet.net) has joined #python
2019-02-02 10:09:24	nedbat	Ninpo: everything is cp1252
2019-02-02 10:09:27	<--	kish` (~oracle@unaffiliated/oracle) has quit (Ping timeout: 240 seconds)
2019-02-02 10:09:31	-->	sinecast (~sinecast@209.97.182.97) has joined #python
2019-02-02 10:09:39	Ninpo	exactly.
2019-02-02 10:09:43	altendky	Ninpo: so, just trying to get it decoded correctly?
2019-02-02 10:09:56	-->	qpls (~qpls@unaffiliated/qpls) has joined #python
2019-02-02 10:10:10	Ninpo	well ultimately if it decodes fine as utf8 and isn't pure ascii, re-encode to cp1252 to fix the data
2019-02-02 10:10:18	Ninpo	For a wholesale convert to utf8 later at DB level
2019-02-02 10:10:20	Ninpo	our DB sucks.
2019-02-02 10:10:28	<--	syscaller (~syscaller@snegw.os3.su) has quit (Remote host closed the connection)
2019-02-02 10:10:37	qpls	most DBs suck
2019-02-02 10:10:41	Ninpo	and the app has made practically every encoding muck up you can think of
2019-02-02 10:10:45	-->	syscaller (~syscaller@snegw.os3.su) has joined #python
2019-02-02 10:10:56	altendky	So a second decode to see if an encode is needed?  Hmm
2019-02-02 10:11:36	very_sneaky	are distutils and setuptools complimentary or exclusive packages?
2019-02-02 10:12:25	altendky	very_sneaky: setuptools uses distutils. you should use setuptools directly
2019-02-02 10:12:58	very_sneaky	altendky: okay, so when writing this setup.py script i should avoid the tutorials advocating using distutils, and find documentation on setuptools?
2019-02-02 10:13:05	-->	Trashlord (~trash@wikipedia/Sentient-Planet) has joined #python
2019-02-02 10:13:11	<--	xdruppi (b517d94d@gateway/web/freenode/ip.181.23.217.77) has quit (Quit: Page closed)
2019-02-02 10:13:25	qpls	very_sneaky: you should avoid python
2019-02-02 10:13:29	qpls	and use perl
2019-02-02 10:13:40	nedbat	Ninpo: how do you know the encoding is wrong?
2019-02-02 10:13:42	very_sneaky	lol
2019-02-02 10:13:57	-->	rkazak (~rkazak@c-71-202-98-21.hsd1.ca.comcast.net) has joined #python
2019-02-02 10:14:15	Ninpo	nedbat: I have eyes.
2019-02-02 10:14:25	qpls	do they work?
2019-02-02 10:14:55	nedbat	Ninpo: ok, so how can you detect it with a program?
2019-02-02 10:15:36	-->	lvn (~elvinyung@198-27-190-135.fiber.dynamic.sonic.net) has joined #python
2019-02-02 10:16:12	-->	kurahaupo (~kurahaupo@115-189-129-194.mobile.spark.co.nz) has joined #python
2019-02-02 10:16:20	<--	vimar (~vimar@host-79-78-173-150.static.as9105.net) has quit (Quit: Lost terminal)
2019-02-02 10:16:26	-->	miz- (~miz-@unaffiliated/miz-) has joined #python
2019-02-02 10:16:29	altendky	very_sneaky: http://blog.habnab.it/blog/2013/07/21/python-packages-and-you/ they will update it to just say to use setuptools.  I personally prefer having src/mypackage/.  It's ugly but helps avoid various issues.
2019-02-02 10:16:32	njs	energizer: pong
2019-02-02 10:17:50	-->	keep_learning (96cbd2d5@gateway/web/cgi-irc/kiwiirc.com/ip.150.203.210.213) has joined #python
2019-02-02 10:17:55	Ninpo	Is there a point to this line of enquiry?  When I can see â‚¬ coming out instead of € or Â£ instead of £, something's encoded wrong.  When I see that come out of a latin1 (cp1252) column in mysql, it's clear utf8 got in there.
2019-02-02 10:18:07	<--	rkazak (~rkazak@c-71-202-98-21.hsd1.ca.comcast.net) has quit (Ping timeout: 240 seconds)
2019-02-02 10:18:24	<--	Shaba1 (~Shaba1@wsip-72-196-170-7.sd.sd.cox.net) has quit
2019-02-02 10:18:27	<--	Essadon (~Essadon@81-225-32-185-no249.tbcn.telia.com) has quit (Quit: Qutting)
2019-02-02 10:18:48	Ninpo	Since only ascii and utf8 decodes correctly with decode('utf-8') and cp1252 encoded things do not, I can at least find most of our data cock ups, if not all of them.
2019-02-02 10:18:48	<--	btop (~btop@12.139.173.251) has quit (Ping timeout: 245 seconds)
2019-02-02 10:18:54	altendky	Should this just use chardet?
2019-02-02 10:19:08	Ninpo	chardet flails wildly on the things I've tested it with from our DB
2019-02-02 10:19:14	Ninpo	Anyway altendky you answered my question, thank you
2019-02-02 10:20:30	<--	routingsparks (~routingsp@pool-108-17-147-17.nrflva.fios.verizon.net) has quit (Remote host closed the connection)
2019-02-02 10:21:58	-->	q-chymera (~q-chymera@213.55.184.216) has joined #python
2019-02-02 10:22:07	<--	Ariakenom (~Ariakenom@h-155-4-222-251.NA.cust.bahnhof.se) has quit (Quit: Leaving)
2019-02-02 10:22:56	<--	kurahaupo (~kurahaupo@115-189-129-194.mobile.spark.co.nz) has quit (Ping timeout: 240 seconds)
2019-02-02 10:23:05	<--	keep_learning (96cbd2d5@gateway/web/cgi-irc/kiwiirc.com/ip.150.203.210.213) has quit (Quit: Ping timeout (120 seconds))
2019-02-02 10:24:03	-->	glick (5a4a8871@gateway/web/cgi-irc/kiwiirc.com/ip.90.74.136.113) has joined #python
2019-02-02 10:24:05	qpls	Ninpo: but ninpo! this is encoding we're talking about
2019-02-02 10:24:05	glick	hi
2019-02-02 10:24:08	glick	is twisted down?
2019-02-02 10:24:11	qpls	you can't apply common sense!
2019-02-02 10:24:14	glick	twisted matrix
2019-02-02 10:24:15	glick	?
2019-02-02 10:24:28	-->	keep_learning (96cbd2d5@gateway/web/cgi-irc/kiwiirc.com/ip.150.203.210.213) has joined #python
2019-02-02 10:24:31	moaz	glick> what do you mean?
2019-02-02 10:24:45	-->	btop (~btop@12.139.173.251) has joined #python
2019-02-02 10:24:46	glick	never mind, its up
2019-02-02 10:24:47	qpls	he wants to know if the matrix is broken
2019-02-02 10:24:49	glick	i can reach it now
2019-02-02 10:24:53	qpls	glick: I'm afraid we can't tell you that
2019-02-02 10:25:03	moaz	this is #python, not #matrix...
2019-02-02 10:25:05	glick	twistedmatrix.com
2019-02-02 10:25:13	moaz	oh
2019-02-02 10:25:22	qpls	glick: https://downforeveryoneorjustme.com/
2019-02-02 10:25:24	rpkilby	glick, not down for me, but the site is *very* slow
2019-02-02 10:25:25	qpls	a gift for you
2019-02-02 10:25:30	glick	ok
2019-02-02 10:26:27	altendky	glick: issues were reported, not fixed yet afaik. Might just be intermittent.
2019-02-02 10:26:39	glick	ok thanks
2019-02-02 10:27:00	<--	Industrial (~tom@145.130.66.89) has quit (Ping timeout: 250 seconds)
2019-02-02 10:27:57	<--	mathpacka (~quassel@2601:805:501:5905:bd0c:6ea3:5594:ea26) has quit (Remote host closed the connection)
2019-02-02 10:29:03	Ninpo	altendky: actually, I was right the first time: https://paste.pound-python.org/show/g5XcOYaW8nrz1HLFBrff/
2019-02-02 10:29:15	Ninpo	Sure I could go utf8 first but then I need an if condition
2019-02-02 10:29:21	-->	robertmeta (sid514@gateway/web/irccloud.com/x-cgdcndzjahpstdym) has joined #python
2019-02-02 10:29:26	<--	btop (~btop@12.139.173.251) has quit (Ping timeout: 240 seconds)
2019-02-02 10:29:47	<--	azizLIGHT (~azizLIGHT@unaffiliated/azizlight) has quit (Ping timeout: 240 seconds)
2019-02-02 10:30:02	<--	tdy (~tdy@unaffiliated/tdy) has quit (Ping timeout: 250 seconds)
2019-02-02 10:30:05	-->	rbanffy (~rbanffy@37.228.254.72) has joined #python
2019-02-02 10:30:17	<--	rpkilby (~rpkilby@c-73-37-2-130.hsd1.or.comcast.net) has quit (Remote host closed the connection)
2019-02-02 10:31:15	altendky	Ninpo: I was thinking just trying to get proper decoding, not trying to detect the encoding
2019-02-02 10:31:58	<--	syscaller (~syscaller@snegw.os3.su) has quit (Remote host closed the connection)
2019-02-02 10:32:07	altendky	At which point don't both ascii and utf8 is pointless in any order. But for detection, sure
2019-02-02 10:32:11	-->	syscaller (~syscaller@188.130.155.142) has joined #python
2019-02-02 10:32:29	altendky	*doing both
2019-02-02 10:32:36	Ninpo	yeah I'm merely looking for oi, this ain't cp1252
2019-02-02 10:32:42	--	deathonater is now known as Smeef
2019-02-02 10:32:56	Ninpo	and annoyingly I can't just try on latin1/cp1252 cos they ALWAYS decode
2019-02-02 10:32:59	-->	azizLIGHT (~azizLIGHT@unaffiliated/azizlight) has joined #python
2019-02-02 10:33:09	-->	tdy (~tdy@unaffiliated/tdy) has joined #python
2019-02-02 10:35:14	<--	rbanffy (~rbanffy@37.228.254.72) has quit (Ping timeout: 250 seconds)
2019-02-02 10:35:22	<--	}ls{ (~kalle@unaffiliated/ls/x-8089558) has quit (Quit: real life interrupt)
2019-02-02 10:35:58	-->	efm (~efm@vpn.tummy.com) has joined #python
2019-02-02 10:38:07	<--	drincruz (~drincruz@cpe-23-243-236-195.socal.res.rr.com) has quit (Ping timeout: 240 seconds)
2019-02-02 10:39:00	<--	_xor (~xor@50.216.161.66.ded-dsl.fuse.net) has quit (Quit: Leaving)
2019-02-02 10:39:21	-->	z8z (~x@ac212170.ppp.asahi-net.or.jp) has joined #python
2019-02-02 10:39:57	<--	sentriz (~sentriz@unaffiliated/sentriz) has quit (Ping timeout: 246 seconds)
2019-02-02 10:43:54	<--	xuib (xuib@gateway/vpn/protonvpn/xuib) has quit (Quit: xuib)
2019-02-02 10:44:17	qpls	Ninpo: the continue statements in your code are superfluous
2019-02-02 10:44:28	<--	Guest12095 (~daniel@71.69.149.82) has quit (Quit: Guest12095)
2019-02-02 10:45:05	-->	divno (~divno@unaffiliated/divno) has joined #python
2019-02-02 10:45:41	<--	nbro_ (~nbro@2a02:aa13:3100:6000:f1f1:fc56:f701:56df) has quit (Remote host closed the connection)
2019-02-02 10:46:35	<--	Guest85200 (47e31640@gateway/web/freenode/ip.71.227.22.64) has quit (Ping timeout: 256 seconds)
2019-02-02 10:46:35	-->	kurahaupo (~kurahaupo@115-189-133-81.mobile.spark.co.nz) has joined #python
2019-02-02 10:47:28	<--	divno (~divno@unaffiliated/divno) has quit (Max SendQ exceeded)
2019-02-02 10:47:36	Ninpo	qpls: how so?
2019-02-02 10:47:46	<--	efm (~efm@vpn.tummy.com) has quit (Remote host closed the connection)
2019-02-02 10:48:05	Ninpo	qpls: ha you're right, thank you
2019-02-02 10:48:09	-->	efm (~efm@vpn.tummy.com) has joined #python
2019-02-02 10:49:07	<--	tdy (~tdy@unaffiliated/tdy) has quit (Ping timeout: 240 seconds)
2019-02-02 10:49:16	<--	Neui (~neui@unaffiliated/neui) has quit (Ping timeout: 264 seconds)
2019-02-02 10:49:23	Ninpo	is continue or pass better on an except that we're happy to ignore?  In a loop context
2019-02-02 10:52:06	qpls	Ninpo: pass
2019-02-02 10:52:15	moaz	why is that
2019-02-02 10:52:25	energizer	njs: unrelatedly i was chatting about some subprocess apis; i dont have a good grasp on conclusions, tho tos9 likely has some more nuanced opinions from having implemented his own python subprocess lib. also the capsec perspective from simpson is different from what i'm used to. anyway, in case you're interested.. https://paste.gg/p/anonymous/edaeabe7e5c84e5e94cfddb0b13d1c11/files/1314edc53f2d427f8ebaf5a7c16f0603/raw
2019-02-02 10:52:28	qpls	moaz: the loop doesn't contain anything else
2019-02-02 10:52:30	qpls	continue is unncessary
2019-02-02 10:52:38	qpls	pass is the standard way to ignore an exception
2019-02-02 10:52:41	moaz	ah
2019-02-02 10:52:46	moaz	i admit i didnt look at the code
2019-02-02 10:52:47	-->	owenc (~owen@79-64-10-186.host.pobb.as13285.net) has joined #python
2019-02-02 10:52:47	moaz	sorry
2019-02-02 10:53:01	-->	halfbit (~tburdick@unaffiliated/submersive) has joined #python
2019-02-02 10:53:16	-->	kurahaupo_ (~kurahaupo@118.148.233.40) has joined #python
2019-02-02 10:53:23	<--	syscaller (~syscaller@188.130.155.142) has quit (Remote host closed the connection)
2019-02-02 10:53:37	-->	sentriz (~sentriz@unaffiliated/sentriz) has joined #python
2019-02-02 10:53:41	-->	syscaller (~syscaller@snegw.os3.su) has joined #python
2019-02-02 10:54:54	-->	pi- (~Ohmu@2403:6200:8878:ebe6:bd35:179c:6a1f:91b3) has joined #python
2019-02-02 10:55:10	<--	kurahaupo (~kurahaupo@115-189-133-81.mobile.spark.co.nz) has quit (Ping timeout: 250 seconds)
2019-02-02 10:55:15	<--	seni (~Nimitz14@cpc91224-cmbg18-2-0-cust82.5-4.cable.virginm.net) has quit (Quit: Leaving)
2019-02-02 10:55:22	altendky	Ninpo: they aren't the same thing
2019-02-02 10:55:31	Ninpo	altendky: hmm?
2019-02-02 10:55:40	qpls	altendky: in this context they are but in general you are correct
2019-02-02 10:55:42	altendky	Ninpo: continue and pass
2019-02-02 10:55:58	Ninpo	I didn't say they were?
2019-02-02 10:56:00	altendky	qpls: what context was provided?  did i miss a code link?
2019-02-02 10:56:07	qpls	evidently :)
2019-02-02 10:56:07	-->	sydbarret (~Username@unaffiliated/sydbarret) has joined #python
2019-02-02 10:56:16	altendky	qpls: where?
2019-02-02 10:56:19	Ninpo	I'm in a loop, happy to ignore an except on an iteration
2019-02-02 10:56:26	energizer	Ninpo: pass
2019-02-02 10:56:26	qpls	altendky: up
2019-02-02 10:56:27	qpls	:P
2019-02-02 10:56:29	moaz	:29:03
2019-02-02 10:56:31	Ninpo	Just wondered, style wise etc, which was better
2019-02-02 10:56:33	-->	rkazak (~rkazak@c-71-202-98-21.hsd1.ca.comcast.net) has joined #python
2019-02-02 10:56:37	Ninpo	energizer: yeahm, established that now :)
2019-02-02 10:56:39	moaz	27 mins ago
2019-02-02 10:56:41	Ninpo	-m
2019-02-02 10:56:42	altendky	qpls: a long time ago...
2019-02-02 10:56:50	moaz	i would have specified hour but i dont know altendky's TZ
2019-02-02 10:57:00	Ninpo	I've dropped the superfluous continues and replaced the last one with a path
2019-02-02 10:57:04	<--	owenc (~owen@79-64-10-186.host.pobb.as13285.net) has quit (Ping timeout: 244 seconds)
2019-02-02 10:57:33	qpls	yes, that looks cleaner
2019-02-02 10:57:36	Ninpo	pass*
2019-02-02 10:58:16	<--	cdown (~cdown@rrcs-108-176-24-99.nyc.biz.rr.com) has quit (Ping timeout: 246 seconds)
2019-02-02 10:58:19	qpls	Ninpo: shouldn't you also log instances of 'mojibake' in your except clause?
2019-02-02 10:58:25	Ninpo	or for clarity, this is now my meat and potatoes worker https://paste.pound-python.org/show/IGmfgucGt5xNmQ5W1rQ9/
2019-02-02 10:58:31	qpls	if the code isn't valid utf8 then don't you want to log it?
2019-02-02 10:58:32	<--	djapo (~archie@unaffiliated/djapo) has quit (Ping timeout: 272 seconds)
2019-02-02 10:58:51	qpls	s/code/text
2019-02-02 10:58:57	Ninpo	qpls: huh?  I'm writing to found mojibake if utf8 decodes where ascii does not
2019-02-02 10:59:21	qpls	What if neither decode the string?
2019-02-02 10:59:25	qpls	don't you want to log that?
2019-02-02 10:59:29	Ninpo	if it's not valid utf8, I don't care, it's safe (in this environment) to assume cp1252
2019-02-02 10:59:35	Ninpo	So it's mysql latin1 so it's fine
2019-02-02 10:59:36	qpls	i see
2019-02-02 10:59:57	qpls	I am not familiar with cp1252, but is it safe to assume that it doesn't overlap with utf8?
2019-02-02 11:00:01	<--	MoarSpaceFi (~Forgot_my@65.126.126.193) has quit (Read error: Connection reset by peer)
2019-02-02 11:00:10	Ninpo	I'm highlighting things that MySQL will do <things> with if we try and do a straight convert DB side from latin1 to utf8
2019-02-02 11:00:15	Ninpo	qpls: they don't
2019-02-02 11:00:27	qpls	are you sure?
2019-02-02 11:00:30	Ninpo	cp1252 is iso-whateverwestern with other things adeded
2019-02-02 11:00:32	Ninpo	added*
2019-02-02 11:00:32	qpls	it would be pretty hard to verify that
2019-02-02 11:00:34	Ninpo	sure about what
2019-02-02 11:00:52	-->	Guest12095 (~daniel@71.69.149.82) has joined #python
2019-02-02 11:00:56	qpls	Ninpo: you would have to be sure there are no valid cp1252 which decode as utf8
2019-02-02 11:01:11	-->	TimeTrap (~TimeTrap@2601:44:c500:65f4:54c:8b44:9db5:eaf0) has joined #python
2019-02-02 11:01:18	qpls	which in general is hard to ensure for arbitrary encodings
2019-02-02 11:01:20	Ninpo	I don't have the 20+ tabs open anymore but I'm pretty sure
2019-02-02 11:01:31	altendky	Ninpo: what are you thinking would raise the TypeError?
2019-02-02 11:01:35	Ninpo	the app is either putting c1252 or utf8 in
2019-02-02 11:01:57	-->	katiex7 (~katiex7@ip72-196-214-135.dc.dc.cox.net) has joined #python
2019-02-02 11:01:59	qpls	Yes, but what if a string can be decoded as either cp1252 or utf8?
2019-02-02 11:02:33	Ninpo	qpls: that's where I'm assuming it's ascii, decodes as ascii and is fine.  As far as I can tell they're the only sets where they overlap correctly
2019-02-02 11:02:36	altendky	Ninpo: and you could unhexlify just once
2019-02-02 11:02:38	qpls	it's highly unlikely that that is impossible unless the encodings were specifically designed to be mutually exclusive (which in general is hard and not true)
2019-02-02 11:03:03	qpls	Ninpo: valid ascii is valid utf8, but that doesn't mean that valid cp1252 is not also sometimes valid utf8
2019-02-02 11:03:15	<--	aos (~aos@ool-182c2a5e.dyn.optonline.net) has quit (Quit: leaving)
2019-02-02 11:03:18	Ninpo	qpls: but those cases will convert fine
2019-02-02 11:03:21	Ninpo	So I don't care.
2019-02-02 11:03:29	qpls	yes, but they may convert incorrectly
2019-02-02 11:03:35	Ninpo	Welp.
2019-02-02 11:03:38	-->	aos (~aos@ool-182c2a5e.dyn.optonline.net) has joined #python
2019-02-02 11:03:57	qpls	consider byte sequence x. If x is decoded as utf8 then it equals y, if it is decoded as cp1252 then it equals z
2019-02-02 11:04:00	Ninpo	I'm minimising a bloody stupid problem, I'm not claiming to have solved the world's unipain
2019-02-02 11:04:01	qpls	x != z
2019-02-02 11:04:01	nedbat	if a string isn't ascii, and it decodes as utf8, it's very very unlikely to be cp1252
2019-02-02 11:04:02	Ninpo	nedbat did that
2019-02-02 11:04:09	-->	rbanffy (~rbanffy@37.228.254.72) has joined #python
2019-02-02 11:04:23	-->	dale (~dale@unaffiliated/dale) has joined #python
2019-02-02 11:04:43	Ninpo	the _solution_ is don't be a dumbass and mix encodings in the first place.  We're past that...I'm mitigating damage.
2019-02-02 11:04:49	qpls	nedbat: in this case that is probably a reasonable assumption, my problem with his test is that it assumes that he won't accidentally succesfully decode some cp1252 as utf8
2019-02-02 11:04:52	-->	rpkilby (~rpkilby@2603:3004:629:6000:c828:d334:94ea:ab6d) has joined #python
2019-02-02 11:04:58	nedbat	and if it decodes as ascii, it also correctly decodes as utf8.  So start with utf8, and if it succeeds, you are done.
2019-02-02 11:05:00	altendky	Ninpo: what were you looking to catch a TypeError from?
2019-02-02 11:05:04	Ninpo	That's not an assumption I am making
2019-02-02 11:05:30	qpls	Ninpo: unless there is a reason you care about differentiating between ascii and utf8 you can also remove the first test (since valid ascii is also valid utf8)
2019-02-02 11:05:35	Ninpo	altendky: sorry, I was replying to you then replied to something else.  Nothing, now, it was catching integers on a previous version of code.
2019-02-02 11:05:39	qpls	just convert everything to utf8
2019-02-02 11:05:50	Ninpo	That doesn't help me
2019-02-02 11:06:01	qpls	it doesn't
2019-02-02 11:06:04	qpls	but it makes your code cleaner :P
2019-02-02 11:06:05	Ninpo	if utf8 succeeds, I have no way of knowing if there's utf8 in there or just ascii
2019-02-02 11:06:07	-->	nomic (~nomic@host109-155-164-203.range109-155.btcentralplus.com) has joined #python
2019-02-02 11:06:14	Ninpo	if it's just ascii it's fine to ignore
2019-02-02 11:06:18	qpls	do you care if it is ascii or utf8?
2019-02-02 11:06:21	altendky	checking both ascii and utf-8 decode would let you avoid a database write if it's ascii (ascii is a subset of cp1252 also, yes?
2019-02-02 11:06:21	Ninpo	if there's utf8 I need to know
2019-02-02 11:06:23	-->	Ai9zO5AP (~BQcdf9eiZ@95.213.148.98) has joined #python
2019-02-02 11:06:25	qpls	aaren't you going to store everything in utf8 anyway?
2019-02-02 11:06:40	Ninpo	eventually, yes, but if there's utf8 it needs to be fixed first.
2019-02-02 11:06:50	qpls	fixed how?
2019-02-02 11:06:53	nedbat	Ninpo: why do you need to know the difference between ascii and utf8?
2019-02-02 11:07:06	qpls	^this
2019-02-02 11:07:07	-->	aeo1ack (~psprint@91.245.82.2) has joined #python
2019-02-02 11:07:53	<--	kurahaupo_ (~kurahaupo@118.148.233.40) has quit (Read error: Connection reset by peer)
2019-02-02 11:08:02	-->	dendazen (~dendazen@pool-72-76-93-243.nwrknj.fios.verizon.net) has joined #python
2019-02-02 11:08:07	<--	psprint_ (~psprint@91.245.82.2) has quit (Ping timeout: 240 seconds)
2019-02-02 11:08:11	-->	chaoscon (~jeremy@smartserv/ceo/chaoscon) has joined #python
2019-02-02 11:08:16	-->	kurahaupo (~kurahaupo@118.148.233.40) has joined #python
2019-02-02 11:08:26	<--	rbanffy (~rbanffy@37.228.254.72) has quit (Ping timeout: 240 seconds)
2019-02-02 11:08:34	Ninpo	repeating myself is annoying.  Especially to the same questions from the same people.  If a text field is all ascii I can ignore it, it will convert from latin1 to utf8 in mysql with no problem.  If, however, this latin1 designated field has utf8 in it (which will also successfully decode in python as utf8) I need to re-encode it to cp1252 and write it back.  Otherwise our future alter table convert to
2019-02-02 11:08:36	Ninpo	utf8mb4 step will at best fail, at worst truncate the entire field at that byte
2019-02-02 11:08:51	-->	edrocks (~ed@096-059-219-229.res.spectrum.com) has joined #python
2019-02-02 11:08:59	altendky	Ninpo: so what i said?  an optimization to avoid a db write that isn't needed?
2019-02-02 11:09:07	Ninpo	yes
2019-02-02 11:09:23	Ninpo	Or at this stage, avoid increasing a counter to give an idea of how bad the problem is
2019-02-02 11:09:26	Ninpo	which btw, it's very bad.
2019-02-02 11:10:06	qpls	Ninpo: or you could just treat all the decoded ascii/utf8 strings the same way in python and run them through the utf8 -> cp1252 process
2019-02-02 11:10:20	qpls	Ninpo: also, I just looked up cp1252, I'm pretty sure it overlaps with utf8
2019-02-02 11:10:23	hnsz	Ninpo: That seems entirely fair to me
2019-02-02 11:10:55	<--	drexl (~drexl@cpc130676-camd16-2-0-cust445.know.cable.virginm.net) has quit (Quit: drexl)
2019-02-02 11:11:50	altendky	qpls: not sure those comments address either the db-write-reduction or the issue-count
2019-02-02 11:12:34	Ninpo	they don't.  I'm not converting at this stage.  I'm looking for broken fields.
2019-02-02 11:12:42	qpls	oh
2019-02-02 11:12:48	qpls	my bad
2019-02-02 11:13:13	<--	rkazak (~rkazak@c-71-202-98-21.hsd1.ca.comcast.net) has quit (Read error: Connection timed out)
2019-02-02 11:13:18	<--	dendazen (~dendazen@pool-72-76-93-243.nwrknj.fios.verizon.net) has quit (Remote host closed the connection)
2019-02-02 11:13:26	<--	braincrash (~braincras@62.48.233.234) has quit (Ping timeout: 240 seconds)
2019-02-02 11:13:31	Ninpo	Once I am happy with the "find it" logic, I'll save the key info so I can surgically find them to fix in a fix pass.  Then we leisurely convert all tables wholesale, DB side.
2019-02-02 11:13:44	<--	o____o (~o____o@d23-16-225-66.bchsia.telus.net) has quit (Read error: Connection reset by peer)
2019-02-02 11:13:58	<--	syscaller (~syscaller@snegw.os3.su) has quit (Remote host closed the connection)
2019-02-02 11:14:08	Ninpo	then never have this problem again while I repeatedly beat the devs responsible with a stick that's got "utf8" carved into it
2019-02-02 11:14:10	-->	syscaller (~syscaller@snegw.os3.su) has joined #python
2019-02-02 11:14:39	<--	pnwise (~pnwise@unaffiliated/pnwise) has quit (Quit: Leaving)
2019-02-02 11:14:45	qpls	careful, if they are veterans they may have ebcdic swords
2019-02-02 11:15:58	Ninpo	They're PHP devs, I can get a good few licks in while both hands are occupied searching for posterior
2019-02-02 11:16:51	-->	rkazak (~rkazak@c-71-202-98-21.hsd1.ca.comcast.net) has joined #python
2019-02-02 11:16:52	<--	aeo1ack (~psprint@91.245.82.2) has quit (Quit: WeeChat 2.3)
2019-02-02 11:17:37	-->	tdy (~tdy@unaffiliated/tdy) has joined #python
2019-02-02 11:18:34	<--	soxhlet (~soxhlet@i59F4D050.versanet.de) has quit (Ping timeout: 250 seconds)
2019-02-02 11:18:54	<--	computeiro (~computeir@189.15.114.56) has quit (Ping timeout: 268 seconds)
2019-02-02 11:19:23	<--	kurahaupo (~kurahaupo@118.148.233.40) has quit (Read error: Connection reset by peer)
2019-02-02 11:19:39	-->	byanka (~|byanka|@node-1w7jr9qkhp7xgs2n7s66px5hn.ipv6.telus.net) has joined #python
2019-02-02 11:19:45	-->	kurahaupo (~kurahaupo@118.148.233.40) has joined #python
2019-02-02 11:19:45	-->	soxhlet (~soxhlet@i59F4A844.versanet.de) has joined #python
2019-02-02 11:19:53	<--	voidSurfr (~voidSurfr@199.21.163.12) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-02-02 11:20:18	-->	computeiro (~computeir@189.15.114.191) has joined #python
2019-02-02 11:20:40	<--	halfbit (~tburdick@unaffiliated/submersive) has quit (Ping timeout: 268 seconds)
2019-02-02 11:21:18	<--	tm (~sinnlos@unaffiliated/tm) has quit (Ping timeout: 245 seconds)
2019-02-02 11:21:56	<--	AcidUK (~acid@bcdc3a5f.skybroadband.com) has quit (Ping timeout: 240 seconds)
2019-02-02 11:22:24	-->	AcidUK (~acid@bcdc3a5f.skybroadband.com) has joined #python
2019-02-02 11:22:51	hnsz	qpls: Christ, how can I ever explain to friends and family what I do? I feel like I am living a double life. Where in one I am trying to be a normal human being that can socially level with others. In the other I am plugged into this chat infrastructure that no one I know has ever heard of. And where people are making references, so obscure, I have to look them op on a codepoint page..
2019-02-02 11:23:02	<--	edrocks (~ed@096-059-219-229.res.spectrum.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-02-02 11:24:02	<--	trens (~trens@2605:a000:132c:2047:404f:9f14:6e1f:9798) has quit (Quit: WeeChat 1.9.1)
2019-02-02 11:24:43	-->	braincrash (~braincras@62.48.233.234) has joined #python
2019-02-02 11:24:52	<--	rkazak (~rkazak@c-71-202-98-21.hsd1.ca.comcast.net) has quit (Ping timeout: 246 seconds)
2019-02-02 11:24:52	qpls	hnsz: irc makes for poor therapy
2019-02-02 11:24:59	qpls	Ninpo: I have defeated you
2019-02-02 11:25:01	qpls	Ninpo: behold
2019-02-02 11:25:02	qpls	b"\xd0\x80".decode('cp1252') == b"\xd0\x80".decode('utf8')
2019-02-02 11:25:16	nedbat	hnsz: you can see the matrix!
2019-02-02 11:25:43	hnsz	nedbat: Yes, it's written in unicode
2019-02-02 11:25:51	nedbat	nice :)
2019-02-02 11:25:53	--	lagothrix is now known as Guest25439
2019-02-02 11:25:53	<--	Guest25439 (~lagothrix@unaffiliated/lagothrix) has quit (Killed (card.freenode.net (Nickname regained by services)))
2019-02-02 11:25:56	qpls	there is no unicode char for 'that blond'
2019-02-02 11:25:56	qpls	;)
2019-02-02 11:26:02	qpls	actually maybe there is...
2019-02-02 11:26:07	-->	lagothrix (~lagothrix@unaffiliated/lagothrix) has joined #python
2019-02-02 11:26:18	<--	tdy (~tdy@unaffiliated/tdy) has quit (Ping timeout: 268 seconds)
2019-02-02 11:26:18	qpls	s/that blond/the woman in the red dress'
2019-02-02 11:26:24	qpls	I am getting old :/
2019-02-02 11:26:26	energizer	👱‍♀️
2019-02-02 11:26:34	hnsz	qpls: We all know what you mean
2019-02-02 11:26:41	qpls	energizer: haha
2019-02-02 11:26:49	qpls	energizer: now find me one in a red dress :P
2019-02-02 11:27:14	energizer	💃
2019-02-02 11:27:28	qpls	wow...
2019-02-02 11:27:34	qpls	wtf unicode
2019-02-02 11:27:54	qpls	this is why we have to put up with multibyte encoding schemes
2019-02-02 11:27:59	qpls	so we can have a red dress emoji
2019-02-02 11:28:00	qpls	motherfuckers
2019-02-02 11:28:10	Ninpo	qpls: Nice find.  Oh well.
2019-02-02 11:28:22	very_sneaky	who needs discord when you have irc
2019-02-02 11:28:27	Ninpo	No accounting for that I don't think
2019-02-02 11:28:28	qpls	Ninpo: that was just one example, there will be a lot more
2019-02-02 11:28:30	qpls	very_sneaky: we need it
2019-02-02 11:28:37	qpls	to keep the prepubescents out
2019-02-02 11:28:50	qpls	it's a diversionary tactic
2019-02-02 11:28:50	Ninpo	qpls: maybe, but, for the scenario of "convert table from latin1 to utf8", it won't get any "wronger"
2019-02-02 11:29:07	very_sneaky	qpls: wouldn't that attract more? show me a prepubsescent that's heard of irc and i'll show you a prodigy
2019-02-02 11:29:21	Ninpo	either they meant Ð€ and I dunno what mysql will do with that...
2019-02-02 11:29:25	-->	Nightwing52 (~Thunderbi@tx-76-1-83-50.dhcp.embarqhsd.net) has joined #python
2019-02-02 11:29:30	qpls	Ninpo: the point is that you can't differentiate between cp1252 and utf8
2019-02-02 11:29:35	qpls	at best you can use some heuristics
2019-02-02 11:29:43	qpls	like assuming no one is going to use the euro sign in their name
2019-02-02 11:29:44	-->	tm (~sinnlos@unaffiliated/tm) has joined #python
2019-02-02 11:29:51	qpls	but that's probably not going to work very well
2019-02-02 11:30:05	energizer	chardet is pretty clever iirc
2019-02-02 11:30:06	qpls	very_sneaky: reread what I wrote
2019-02-02 11:30:07	<--	kurahaupo (~kurahaupo@118.148.233.40) has quit (Read error: Connection reset by peer)
2019-02-02 11:30:24	-->	tdy (~tdy@unaffiliated/tdy) has joined #python
2019-02-02 11:30:37	qpls	there is always going to be one..
2019-02-02 11:30:37	qpls	https://xkcd.com/327/
2019-02-02 11:30:37	Ninpo	energizer: it is, but for the strings I'm dealing with, it flailed a lot between cp1252 and the genuine iso 88whatever and was never very confident
2019-02-02 11:30:38	-->	kurahaupo (~kurahaupo@118.148.233.40) has joined #python
2019-02-02 11:31:30	-->	halfbit (~tburdick@unaffiliated/submersive) has joined #python
2019-02-02 11:31:34	energizer	Ninpo: what kind of text is it, if i can ask
2019-02-02 11:31:47	Ninpo	Because I know what's coming in is either utf8 or cp1252, I can make some assumptions.  If a utf8 decode fails it's most likely latin1 stuff.  If I get some crossover, well there's nothing I can do about that anyway, mysql will make of it what it makes of it on conversion
2019-02-02 11:31:49	<--	kurahaupo (~kurahaupo@118.148.233.40) has quit (Read error: Connection reset by peer)
2019-02-02 11:32:03	Ninpo	energizer: the bulk of what's breaking is smart quotes, pound signs, euros etc
2019-02-02 11:32:10	-->	kurahaupo (~kurahaupo@115-189-131-188.mobile.spark.co.nz) has joined #python
2019-02-02 11:32:21	<--	aalmazan (uid180785@gateway/web/irccloud.com/x-trrsvakeztdftogw) has quit (Quit: Connection closed for inactivity)
2019-02-02 11:32:25	qpls	or you could just read the broken code that produced the DB entries to figure out the real encoding scheme :P
2019-02-02 11:32:25	Ninpo	people copying from word docs into our forms and the app derping on what they're supposed to be saved as, as far as the DB is concerned
2019-02-02 11:32:40	Ninpo	qpls: Like I said, it's either cp1252 or utf8
2019-02-02 11:32:57	Ninpo	the goal is to prevent conversion failing or truncating the strings
2019-02-02 11:32:58	<--	computeiro (~computeir@189.15.114.191) has quit (Ping timeout: 245 seconds)
2019-02-02 11:33:10	qpls	yes, but that doesn't tell you anything
2019-02-02 11:33:15	qpls	the two are not mutually exclusive
2019-02-02 11:33:16	-->	computeiro (~computeir@177.66.184.98) has joined #python
2019-02-02 11:33:20	qpls	as I have demonstrated
2019-02-02 11:33:29	qpls	valid utf8 can be valid cp1252
2019-02-02 11:33:37	Ninpo	AT WHICH POINT THE DB WILL MAKE THE SAME COCK UP
2019-02-02 11:33:39	energizer	well "sometimes doesn't distinguish" != "doesn't tell you anything"
2019-02-02 11:33:39	qpls	or rather valid cp1252 can be valid utf8
2019-02-02 11:33:39	Ninpo	ffs
2019-02-02 11:33:41	<--	Ninpo (~Ninpo@fsf/member/Ninpo) has left #python ("WeeChat 2.0.1")
2019-02-02 11:33:42	qpls	the first is always true
2019-02-02 11:34:13	qpls	BYTES DONT CARE ABOUT YOUR ENCODINGS
2019-02-02 11:34:14	qpls	ERMAGURD
2019-02-02 11:34:50	energizer	you found an example of one code point lining up, but ninpo's strings are probably longer
2019-02-02 11:34:58	<--	syscaller (~syscaller@snegw.os3.su) has quit (Remote host closed the connection)
2019-02-02 11:35:12	-->	syscaller (~syscaller@snegw.os3.su) has joined #python
2019-02-02 11:35:25	qpls	energizer: you don't understand, I contrived that example
2019-02-02 11:35:31	qpls	as an example..
2019-02-02 11:35:38	qpls	there are likely many natural instances
2019-02-02 11:36:10	qpls	in fact any utf8 sequences containing only one and two byte characters is also valid cp1252
2019-02-02 11:36:14	qpls	which is probably a lot of them
2019-02-02 11:36:22	<--	Guddu (~Guddu@unaffiliated/guddu) has quit (Quit: Leaving)
2019-02-02 11:36:44	energizer	gonna depend on how long ninpo's strings are, i imagine
2019-02-02 11:36:49	qpls	no
2019-02-02 11:36:50	qpls	it doesn't
2019-02-02 11:36:55	qpls	it depends on WHAT the strings are
2019-02-02 11:36:58	qpls	their length is irrelevant
2019-02-02 11:37:28	-->	smallick (~smallick@1.187.187.198) has joined #python
2019-02-02 11:38:05	energizer	right, i mean a long string has more chances to fail .decode('utf8')
2019-02-02 11:38:23	<--	spacepup (~spacepup@pool-72-83-155-200.washdc.fios.verizon.net) has quit (Ping timeout: 245 seconds)
2019-02-02 11:38:36	qpls	wrong
2019-02-02 11:38:40	qpls	consider  b"\xd0\x80Bobby"
2019-02-02 11:38:59	energizer	yes you can construct examples
2019-02-02 11:39:12	qpls	that should be enough...
2019-02-02 11:39:13	energizer	i'm imagining a model like chardet's
2019-02-02 11:39:17	qpls	you can't make any assumptions about user input
2019-02-02 11:39:26	njs	qpls: your example is meaningless afaict?
2019-02-02 11:39:33	qpls	-_-
2019-02-02 11:39:34	qpls	ok
2019-02-02 11:39:41	njs	qpls: literally any valid utf8 string is also a valid cp1252 string
2019-02-02 11:39:42	qpls	it seems no one understands why encodings exist
2019-02-02 11:39:47	qpls	go do whatever you want
2019-02-02 11:39:48	energizer	well you can make assumptions about user input. they might be wrong, but you can make them
2019-02-02 11:40:00	qpls	I am disappointed in #python
2019-02-02 11:40:06	njs	qpls: and the only time they decode to the same values is if you're in the ascii subset
2019-02-02 11:40:17	-->	Ninpo (~Ninpo@fsf/member/Ninpo) has joined #python
2019-02-02 11:40:17	-->	ackpacket (~ackpacket@unaffiliated/ackpacket) has joined #python
2019-02-02 11:40:38	qpls	njs: /r/whoosh
2019-02-02 11:41:51	<--	FreeFull (~freefull@defocus/sausage-lover) has quit
2019-02-02 11:41:57	qpls	lol
2019-02-02 11:42:02	qpls	Ninpo: just joined
2019-02-02 11:42:04	njs	qpls: I'm not sure who you're arguing with, but good luck
2019-02-02 11:42:17	qpls	Ninpo: you missed the conversation about why you can't do what you want to do
2019-02-02 11:42:20	njs	energizer: thanks for the transcript
2019-02-02 11:42:57	Ninpo	Oh good that was the intent
2019-02-02 11:43:29	<--	Praematura_ (~quassel@2603:3006:1498:8000:89c1:5ffb:115e:3709) has quit (Ping timeout: 268 seconds)
2019-02-02 11:43:34	energizer	qpls: you might be interested in some model-based inference algorithms like chardet https://chardet.readthedocs.io/en/latest/how-it-works.html
2019-02-02 11:43:34	<--	userx (~userx@unaffiliated/userx) has quit (Quit: userx)
2019-02-02 11:43:35	njs	energizer: we had some discussion of rust's API for this at some point, with similar conclusions... i.e. it's basically the same as subprocess but in a language without kwargs
2019-02-02 11:43:46	qpls	I hope b"\xd0\x80Bobby"'s multi million dollar account becomes inaccessible because of your failure to understand how character encoding works
2019-02-02 11:44:01	njs	Ninpo: /ignore is more narrowly tuned
2019-02-02 11:44:19	<--	xnaas (~xnaas@unaffiliated/xnaas) has quit (Quit: Dead.)
2019-02-02 11:44:26	qpls	njs: seems to make good use of it with his professors
2019-02-02 11:44:34	<--	Nightwing52 (~Thunderbi@tx-76-1-83-50.dhcp.embarqhsd.net) has quit (Ping timeout: 250 seconds)
2019-02-02 11:44:42	-->	xnaas (~7f000001@unaffiliated/xnaas) has joined #python
2019-02-02 11:44:48	smallick	check: import heapq; print(heapq.__about__)
2019-02-02 11:44:48	<--	Christofosho (~Christofo@unaffiliated/christofosho) has quit (Quit: Leaving)
2019-02-02 11:45:20	njs	qpls: dude, don't be a jerk
2019-02-02 11:45:30	energizer	njs: looks like Command('/bin/cat').add_args([...]) is a bit different from subprocess.run in that it keeps the command part separate from its args, and also keeps object init separate from execution
2019-02-02 11:45:35	<--	kurahaupo (~kurahaupo@115-189-131-188.mobile.spark.co.nz) has quit (Read error: Connection reset by peer)
2019-02-02 11:45:42	Ninpo	Not everything is absolutes.  The only thing that bugs me about this channel is pedantry often gets in the way of the purpose.  When the bulk of the encoding problems is smart quotes and smart dashes and the GOAL is to make sure mysql doesn't just blithely truncate the rest of the field after a byte it can't understand, I don't give a toss if a Ð€ comes out as Ѐ so long as what came after Ð€ is still
2019-02-02 11:45:44	Ninpo	there.
2019-02-02 11:45:51	njs	energizer: yeah. not really sure what the advantages of those are tbh
2019-02-02 11:46:10	<--	kayleefrye (~kayleefry@S01069072400657f5.vs.shawcable.net) has quit (Remote host closed the connection)
2019-02-02 11:46:18	<--	pjs902 (~quassel@134.41.168.188) has quit (Ping timeout: 245 seconds)
2019-02-02 11:46:41	Ninpo	I'm just a sysadmin, trying to guide 7 php devs towards sanity and have less things that keep me up at night.
2019-02-02 11:46:44	energizer	njs: surely pathlib is nicer than os.path, and the fluent api is part of why
2019-02-02 11:46:47	qpls	Ninpo: properly encoding your data so you don't lose it is not pedantry
2019-02-02 11:46:51	njs	energizer: I'm even fine with the weird quirks around accepting the command as a string on Windows, or with shell=True on unix... it's quirky, but convenient
2019-02-02 11:47:00	Ninpo	Removing fields that DEFINITELY have utf8 in them that is DEFINITELY not cp1252 is a big step on that way
2019-02-02 11:47:26	Ninpo	qpls: I'm not going to visually inspect 800k tables.  So it's best efforts.  Anything I miss, MySQL is going to stomp on anyway.
2019-02-02 11:48:03	qpls	I don't know what you mean by 'MySQL is going to stomp on' MySQL can't fix or detect the encoding issue you have
2019-02-02 11:48:04	energizer	njs: shell=True feels like it wants to be a different function, especially since it still accepts a list (and passes it to /bin/sh iirc)
2019-02-02 11:48:04	Ninpo	Correctness is a goal; good enough is often a good stopping point.  Perfect enemy of the good etc.
2019-02-02 11:48:07	<--	Forsaken87 (~quassel@2a02:908:1869:4b20:f4b0:188b:cefd:b063) has quit (Ping timeout: 252 seconds)
2019-02-02 11:48:09	-->	Nightwing52 (~Thunderbi@tx-76-1-83-50.dhcp.embarqhsd.net) has joined #python
2019-02-02 11:48:09	njs	energizer: I wouldn't call pathlib a fluent API. It's just a data type with a nice API. There's no setup -> configure -> go flow.
2019-02-02 11:48:13	Ninpo	oh jeez...
2019-02-02 11:48:26	njs	energizer: trio's version does not accept a list if you use shell=True :-)
2019-02-02 11:48:30	Ninpo	qpls: Can we say you're missing the point and move on to somethign else?
2019-02-02 11:48:44	smallick	p = p / 'home' / 'who'
2019-02-02 11:48:52	Ninpo	I mean me leaving to take a breather didn't get that across so I'm hoping an outright request will do it
2019-02-02 11:48:56	<--	halfbit (~tburdick@unaffiliated/submersive) has quit (Ping timeout: 240 seconds)
2019-02-02 11:49:41	<--	smallick (~smallick@1.187.187.198) has quit (Quit: jmIrc-m v0.34a by Archangel (http://jmirc-m.net.ru/en/))
2019-02-02 11:49:47	<--	philr (~phil@124-169-168-114.dyn.iinet.net.au) has quit (Ping timeout: 240 seconds)
2019-02-02 11:49:53	energizer	njs: Path().parent.resolve().is_dir() isnt "fluent"?
2019-02-02 11:49:55	njs	Ninpo: given that there are no ops around, I suspect you'll have to move on without waiting for their permission
2019-02-02 11:49:56	qpls	Ninpo: do whatever you want, I'm just pointing out that you committing the same mistake that caused the problem you are trying to rectify
2019-02-02 11:50:15	Ninpo	except I'm greatly reducing them...?
2019-02-02 11:50:21	nedbat	Ninpo, qpls: seems like this discussion has reached the end of its productive live.
2019-02-02 11:50:27	<--	zeofig (~user@124-171-103-228.dyn.iinet.net.au) has quit (Ping timeout: 240 seconds)
2019-02-02 11:50:32	nedbat	Ninpo, qpls: I suggest just dropping it for now
2019-02-02 11:50:40	Ninpo	Happy to.
2019-02-02 11:50:43	-->	thin (9b628300@gateway/web/freenode/ip.155.98.131.0) has joined #python
2019-02-02 11:50:47	qpls	randomly converting strings from one encoding to another is hardly 'reducing' the magnitude of the problem
2019-02-02 11:50:51	qpls	but whatever
2019-02-02 11:51:18	thin	Speaking of strings and encodings, my friend's working on some homework that requires her to modify HTTP responses.
2019-02-02 11:51:26	<--	Buey (~Buey@23.226.133.77) has quit (Remote host closed the connection)
2019-02-02 11:51:26	-->	xekz (~kexmex@unaffiliated/kexmex) has joined #python
2019-02-02 11:52:00	nedbat	thin: how so?
2019-02-02 11:52:23	<--	xnaas (~7f000001@unaffiliated/xnaas) has quit (Quit: Dead.)
2019-02-02 11:52:28	-->	Buey (~Buey@23.226.133.86) has joined #python
2019-02-02 11:52:49	-->	xnaas (~xnaas@unaffiliated/xnaas) has joined #python
2019-02-02 11:53:04	thin	nedbat: it's a "proxy server." Give me just a bit, though.
2019-02-02 11:53:12	thin	Ah. We need to separate the content from the headers.
2019-02-02 11:53:13	-->	veegee (~veegee@ipagstaticip-3d3f7614-22f3-5b69-be13-7ab4b2c585d9.sdsl.bell.ca) has joined #python
2019-02-02 11:53:24	<--	perplexity (~perplexed@unaffiliated/perplexity) has quit (Remote host closed the connection)
2019-02-02 11:53:25	thin	split('\r\n\r\n') isn't what we need, right?
2019-02-02 11:53:37	--	metrixx is now known as Guest92218
2019-02-02 11:53:38	-->	metrixx_ (~metrixx@unaffiliated/metrixx) has joined #python
2019-02-02 11:54:04	thin	Because that splits ANY form of \r\n, and that's not what we want. We want SPECIFICALLY the sequence \r\n\r\n to split it.
2019-02-02 11:54:10	<--	comaster (~comaster@167-179-129-78.a7b381.mel.nbn.aussiebb.net) has quit (Quit: Leaving)
2019-02-02 11:54:17	-->	perplexity (~perplexed@unaffiliated/perplexity) has joined #python
2019-02-02 11:54:33	energizer	njs: not accepting sounds like an improvement
2019-02-02 11:54:38	<--	kevr_ (~kevr@unaffiliated/kevr) has quit (Ping timeout: 245 seconds)
2019-02-02 11:54:40	energizer	accepting lists*
2019-02-02 11:54:54	<--	perplexity (~perplexed@unaffiliated/perplexity) has quit (Remote host closed the connection)
2019-02-02 11:55:32	thin	Should I use re.split() instead?
2019-02-02 11:55:35	-->	perplexity (~perplexed@unaffiliated/perplexity) has joined #python
2019-02-02 11:55:51	<--	perplexity (~perplexed@unaffiliated/perplexity) has quit (Max SendQ exceeded)
2019-02-02 11:55:58	<--	syscaller (~syscaller@snegw.os3.su) has quit (Remote host closed the connection)
2019-02-02 11:56:03	-->	pjs902 (~quassel@134.41.168.188) has joined #python
2019-02-02 11:56:12	-->	syscaller (~syscaller@snegw.os3.su) has joined #python
2019-02-02 11:56:20	Ninpo	thin: this smells like an XY problem, what's the task/assignment?
2019-02-02 11:56:24	-->	horohoro (~horohoro@114-44-87-160.dynamic-ip.hinet.net) has joined #python
2019-02-02 11:56:36	very_sneaky	If i have my unit tests in a parallel tree to my source, what's the preferred way of calling the test package?
2019-02-02 11:56:40	thin	Ninpo: How so?
2019-02-02 11:56:45	energizer	Ninpo: they said homework
2019-02-02 11:56:55	-->	perplexity (~perplexed@unaffiliated/perplexity) has joined #python
2019-02-02 11:56:58	Ninpo	energizer: I know...that doesn't exactly narrow it down?
2019-02-02 11:57:08	energizer	Ninpo: oh i misread your question :)
2019-02-02 11:57:08	<--	Guest92218 (~metrixx@unaffiliated/metrixx) has quit (Ping timeout: 250 seconds)
2019-02-02 11:57:12	Ninpo	thin: well new lines aren't specific to anything
2019-02-02 11:57:23	<--	perplexity (~perplexed@unaffiliated/perplexity) has quit (Max SendQ exceeded)
2019-02-02 11:57:34	energizer	very_sneaky: pytest tests/
2019-02-02 11:57:47	thin	Ninpo: I did say that we're looking in HTTP responses and trying to separate the body from the text. We need to re-calculate the Content-Length parameter.
2019-02-02 11:58:04	-->	perplexity (~perplexed@unaffiliated/perplexity) has joined #python
2019-02-02 11:58:31	thin	So, what we're going to do is re.split the full response between headers and content, and then calculate the content length, and then go into the headers and modify the Content-Length line to the new length. I don't see, at all, how this is an XY problem, nor how I didn't provide the context you wantd.
2019-02-02 11:58:53	very_sneaky	energizer: ah yeah, true. So best practice is to run all tests at every test interval?
2019-02-02 11:58:54	thin	I'm super inclined to think you'd rather this be a simple "you didn't provide me with what I want, so fuck you" situation, and you're free to tell me to fuck off all you want. In PM.
2019-02-02 11:59:15	Ninpo	I think it's time I went to bed.
2019-02-02 11:59:15	-->	renich (~renich@177.240.230.53) has joined #python
2019-02-02 11:59:45	<--	renich_ (~renich@91.92.71.51) has quit (Ping timeout: 246 seconds)
2019-02-02 11:59:46	Evidlo	take a chill pill
2019-02-02 11:59:52	energizer	very_sneaky: i'll often break them into tests/unit_tests/ and tests/integration_tests/ or something, so i have a fast and a slow
2019-02-02 12:00:31	altendky	thin: calm down and watch the language
2019-02-02 12:00:45	<--	cnsvc (~cnsvc@gateway/tor-sasl/cnsvc) has quit (Ping timeout: 256 seconds)
2019-02-02 12:01:00	thin	altendky: I'm entirely calm. What makes you think otherwise?
2019-02-02 12:01:25	altendky	thin: then just be polite
2019-02-02 12:01:30	thin	Also, now I've gotta iterate over the headers, detect if one of them is a Content-Length header, and then modify that exact header in the list itself. Should I use map() for this?
2019-02-02 12:01:49	thin	altendky: I don't see how I'm not being polite for telling someone what I think about how they approached me. Everyone else seems to be helpful.
2019-02-02 12:02:26	-->	feodoran_ (~quassel@200116b840d94200d844defde6a78535.dip.versatel-1u1.de) has joined #python
2019-02-02 12:02:29	--	feodoran is now known as Guest7625
2019-02-02 12:02:35	--	feodoran_ is now known as feodoran
2019-02-02 12:02:36	<--	Guest7625 (~quassel@200116b840ab3a00884be8fed657ce3a.dip.versatel-1u1.de) has quit (Ping timeout: 268 seconds)
2019-02-02 12:04:10	nedbat	IRC is hard.  Let's get back to the technical question, and everyone keep the language professional.
2019-02-02 12:04:13	-->	davr0s (~textual@host109-150-222-15.range109-150.btcentralplus.com) has joined #python
2019-02-02 12:04:27	very_sneaky	energizer: yeah good idea
2019-02-02 12:04:38	energizer	njs: it's a little annoying if you want to switch out the arguments
2019-02-02 12:04:38	-->	submerciful (~submercif@2600:1017:b401:fada:c49f:e636:c00a:fd7a) has joined #python
2019-02-02 12:04:50	thin	https://paste.pound-python.org/show/S5LQpSgp356UNi2EmDK4/ Why does this not work? How would I do what the intention of this is?
2019-02-02 12:05:01	<--	submerciful (~submercif@2600:1017:b401:fada:c49f:e636:c00a:fd7a) has quit (Remote host closed the connection)
2019-02-02 12:05:18	nedbat	thin: i is a reference to the value in the list, it isn't a reference to the location in the list.
2019-02-02 12:05:21	<--	AcTiVaTe (~activate@host-m7ku8h.tnz1.zeelandnet.nl) has quit (Ping timeout: 246 seconds)
2019-02-02 12:05:26	-->	rbanffy (~rbanffy@37.228.254.72) has joined #python
2019-02-02 12:05:35	<--	braincrash (~braincras@62.48.233.234) has quit (Quit: bye bye)
2019-02-02 12:05:39	nedbat	thin: line 2 says, make i refer to a value from the list.  line 3 says, now make i refer to something else.
2019-02-02 12:05:42	<--	jcalla (~jcallaha@cpe-75-189-208-201.nc.res.rr.com) has quit (Ping timeout: 246 seconds)
2019-02-02 12:05:54	thin	A re-binding instead of a re-valuing?
2019-02-02 12:06:00	<--	wa1em (~Corey84@unaffiliated/corey84) has quit (Remote host closed the connection)
2019-02-02 12:06:11	thin	What's the way I'd do that, then? My actual intention is to essentially filter THEN replace
2019-02-02 12:06:11	nedbat	thin: this has more details: bit.ly/pynames1
2019-02-02 12:06:19	nedbat	thin: you make a new list.
2019-02-02 12:06:28	energizer	njs: having to do `lambda args: subprocess.run([command] + args)` feels a little like it doesnt want me to be doing that
2019-02-02 12:06:41	nedbat	thin: i don't know what kind of real filtering and replacing you need to do.
2019-02-02 12:07:01	thin	I said it earlier. I'm going through a list of strings that make up the headers of an HTTP response.
2019-02-02 12:07:04	-->	fc5dc9d4_ (~quassel@p5B0813EB.dip0.t-ipconnect.de) has joined #python
2019-02-02 12:07:17	-->	divno (~divno@unaffiliated/divno) has joined #python
2019-02-02 12:07:23	thin	I want to find a specific header and then just replace that header with a new string that will have Content-Length: [newvalue].
2019-02-02 12:07:28	-->	Wulf4 (~Wulf@unaffiliated/wulf) has joined #python
2019-02-02 12:07:45	njs	thin: there are some http parsing libraries around if that's useful, like h11. Of course if the point of the assignment is to practice string operations, that's not useful :-)
2019-02-02 12:08:16	nedbat	thin: i would right a function that transforms one header:  def fix_header(h): if h.startswith("Content-Length:"): return new_content_header;; else: return h
2019-02-02 12:08:31	nedbat	thin: then:  new_headers = [ fix_header(h) for h in old_headers ]
2019-02-02 12:08:32	njs	thin: do note for future reference though that in real life, using string operations to manipulate http is really risky, there are a ton of weird subtleties in the standard that people underestimate
2019-02-02 12:08:50	<--	dotgourav (~dotgourav@112.196.171.22) has quit (Ping timeout: 272 seconds)
2019-02-02 12:08:56	energizer	njs: c.f.  c = Command(name, args=args); c.with_args(['-n', '--name=foo']). or even c.with_args(name=foo, n=True) # maybe a little optimistic
2019-02-02 12:09:01	thin	Ah, a list comprehension.
2019-02-02 12:09:03	njs	(header names are caste insensitive btw, dunno if that matters for this assignment or not)
2019-02-02 12:09:22	nedbat	njs: i think we should all be caste insensitive :)
2019-02-02 12:09:30	njs	hah doh
2019-02-02 12:09:33	<--	rbanffy (~rbanffy@37.228.254.72) has quit (Ping timeout: 246 seconds)
2019-02-02 12:09:41	njs	*case insensitive
2019-02-02 12:10:05	-->	braincrash (~braincras@62.48.233.234) has joined #python
2019-02-02 12:10:08	altendky	energizer: auto _ to -?  I dunno...
2019-02-02 12:10:16	thin	njs: I completely agree that it would make more sense for school systems to teach better understanding instead of this reinvent the wheel garbage.
2019-02-02 12:10:43	<--	Wulf (~Wulf@unaffiliated/wulf) has quit (Ping timeout: 246 seconds)
2019-02-02 12:10:43	--	Wulf4 is now known as Wulf
2019-02-02 12:10:53	<--	fc5dc9d4 (~quassel@p5B081454.dip0.t-ipconnect.de) has quit (Ping timeout: 245 seconds)
2019-02-02 12:10:58	Ninpo	What nedbat just said is a good explanation for why I said it sounds like an XY problem.  Worrying about exact line returns when dealing with a complex thing like HTTP parsing etc.
2019-02-02 12:11:07	<--	pjs902 (~quassel@134.41.168.188) has quit (Ping timeout: 240 seconds)
2019-02-02 12:11:13	qpls	thin: sometimes you need to reinvent the wheel to better understand how the wheel works
2019-02-02 12:11:19	nedbat	Ninpo: given what you just went through, maybe give people the benefit of the doubt.. :)
2019-02-02 12:11:21	njs	energizer: eh, I guess? you can always make a little helper. what if you want to replace just one of the arguments and not the others? etc.
2019-02-02 12:11:28	energizer	njs: seems like a ProcessInvocation is as much an 'object' as a Path is
2019-02-02 12:11:47	<--	themsay (~themsay@149.254.234.216) has quit (Ping timeout: 240 seconds)
2019-02-02 12:11:47	-->	looprock (~textual@68.21.151.201) has joined #python
2019-02-02 12:11:59	<--	tdy (~tdy@unaffiliated/tdy) has quit (Read error: Connection reset by peer)
2019-02-02 12:12:15	Ninpo	nedbat: ummm I am?  I said something sounded like an XY issue and I got sworn at.  I'm not entirely sure where my "misstep" is here.
2019-02-02 12:12:27	thin	qpls: Surely, but then you don't all go home and make a car with your reinvention.
2019-02-02 12:12:43	njs	Ninpo: the http/1.1 spec does actually say that the exact byte sequence b"\r\n\r\n" is how you recognize the end of the headers, fwiw
2019-02-02 12:12:45	thin	These assignments are huge, but that's an irrelevant discussion, according to most topics.
2019-02-02 12:12:49	-->	tdy (~tdy@unaffiliated/tdy) has joined #python
2019-02-02 12:12:59	thin	I didn't FUCKING swear at you, Ninpo.
2019-02-02 12:13:04	thin	Have your fight if you want. In PM.
2019-02-02 12:13:08	nedbat	thin: please stop that
2019-02-02 12:13:14	nedbat	thin: keep the language professional
2019-02-02 12:13:15	thin	nedbat: He can grow up or get out.
2019-02-02 12:13:16	Ninpo	njs: TIL.  Worrying about that from a python coding perspective otoh...
2019-02-02 12:13:24	thin	What? I know what he wants.
2019-02-02 12:13:37	qpls	everyone calm down
2019-02-02 12:13:40	nedbat	thin, Ninpo: i'll kick both of you if you keep talking to each other.  stop it.
2019-02-02 12:13:45	thin	He's not going to stop until he has his blowout. "Calming down" is just going to make it passive aggressive.
2019-02-02 12:13:45	qpls	pretend you have amnesia about everything after this
2019-02-02 12:13:50	qpls	->------------------------------------------------------------------
2019-02-02 12:13:50	qpls	line
2019-02-02 12:13:53	<--	rasusto (~rasusto@64.121.15.242) has quit (Quit: rasusto)
2019-02-02 12:13:55	qpls	except the last sentence
2019-02-02 12:14:00	qpls	since 'line' was part of it
2019-02-02 12:14:01	thin	That's a better response than every other operator I've ever seen, nedbat. At least it's clear.
2019-02-02 12:14:06	qpls	and it wouldn't make sense if you had amnesia
2019-02-02 12:14:08	njs	(well, there is a subtlety you have to watch out for if there are no headers)
2019-02-02 12:14:09	Ninpo	You'll kick me? wtf did I do?
2019-02-02 12:14:10	qpls	and then just saw 'line' on irc
2019-02-02 12:14:17	nedbat	Ninpo: let's just drop it, please.
2019-02-02 12:14:30	nedbat	Ninpo: let's chalk it up to a miscommunication.
2019-02-02 12:14:32	-->	submerciful (~submercif@2600:1017:b401:fada:2c0f:570:4ff2:fc3b) has joined #python
2019-02-02 12:14:37	<--	submerciful (~submercif@2600:1017:b401:fada:2c0f:570:4ff2:fc3b) has quit (Remote host closed the connection)
2019-02-02 12:15:05	Ninpo	...wow.
2019-02-02 12:15:05	qpls	->------------------------------------------------------------------
2019-02-02 12:15:25	qpls	so
2019-02-02 12:15:32	qpls	how bout them <insert sports team here>?
2019-02-02 12:16:58	energizer	altendky: not always applicable, but  https://www.gnu.org/software/libc/manual/html_node/Argument-Syntax.html
2019-02-02 12:17:28	<--	syscaller (~syscaller@snegw.os3.su) has quit (Remote host closed the connection)
2019-02-02 12:17:30	thin	Her code looks horrible, but it seems to be working. Is there a name for the disorder where you can't stop doing "for index in range(len())"... when coming from C?
2019-02-02 12:17:42	-->	syscaller (~syscaller@snegw.os3.su) has joined #python
2019-02-02 12:17:44	Ninpo	I'd appreciate at least a clue on how I've not been in keeping with channel rules, either here or in pm, nedbat
2019-02-02 12:17:51	qpls	Argument protocol: <make assert> <have third party refute assertion> <make assertion again> <have third party tell you to RTFM> <RTFM> <repeat assertion>...
2019-02-02 12:18:06	<--	glick (5a4a8871@gateway/web/cgi-irc/kiwiirc.com/ip.90.74.136.113) has quit (Ping timeout: 268 seconds)
2019-02-02 12:18:46	<--	z8z (~x@ac212170.ppp.asahi-net.or.jp) has quit (Quit: Quitting)
2019-02-02 12:19:14	<--	atrigent (~ari-_-e@unaffiliated/atrigent) has quit (Ping timeout: 250 seconds)
2019-02-02 12:19:47	altendky	energizer: yeah, it just doesn't seem super great. Like dict(blue='red'). Kind of lying about what's going on without much benefit I think
2019-02-02 12:20:31	qpls	thin: what is wrong with for index in range(times)?
2019-02-02 12:20:32	njs	Ninpo: maybe a useful thing to keep in mind: the goal of moderation is generally not to punish the wicked and exalt the righteous, but to keep the room functioning and the tone friendly. engaging with jerks can disrupt that just as much as being a jerk.
2019-02-02 12:20:51	thin	qpls: Is times a keyword?
2019-02-02 12:21:00	qpls	thin: it's a metavariable for a number
2019-02-02 12:21:02	qpls	or something
2019-02-02 12:21:02	qpls	oh
2019-02-02 12:21:06	qpls	I saw the len
2019-02-02 12:21:17	qpls	so I assume you mean people who do that to iterate over lists
2019-02-02 12:21:20	qpls	yeah, that's bad
2019-02-02 12:21:22	thin	aaye
2019-02-02 12:21:39	thin	Aye, even.
2019-02-02 12:21:43	<--	lastmanstanding (~arjoonn@111.92.48.159) has quit (Ping timeout: 245 seconds)
2019-02-02 12:21:52	<--	Guest12095 (~daniel@71.69.149.82) has quit (Quit: Guest12095)
2019-02-02 12:22:01	nedbat	thin: the disorder is called, "there is more to be learned," which is to say, you are one of us
2019-02-02 12:22:23	thin	nedbat: Absolutely, though it's still a hard, stubborn habit for most people.
2019-02-02 12:22:23	qpls	unless you are a ruby developer
2019-02-02 12:22:29	qpls	fuck those guys
2019-02-02 12:22:38	nedbat	qpls: don't do that, even in jest
2019-02-02 12:22:51	qpls	nedbat: I would never seriously fuck one of them
2019-02-02 12:22:53	qpls	don't worry
2019-02-02 12:23:13	<--	bluezone (uid104970@gateway/web/irccloud.com/x-znaosmqzlqszbaex) has quit (Quit: Connection closed for inactivity)
2019-02-02 12:23:32	nedbat	qpls: do you remember the "professional language" request?
2019-02-02 12:23:46	-->	veid (~veid@c-73-97-164-11.hsd1.wa.comcast.net) has joined #python
2019-02-02 12:23:48	-->	lastmanstanding (~arjoonn@137.97.165.204) has joined #python
2019-02-02 12:24:51	<--	ackpacket (~ackpacket@unaffiliated/ackpacket) has quit (Quit: My puter has gone to sleep. ZZZzzz…)
2019-02-02 12:25:08	qpls	nedbat: no.. but if there was one I reject it
2019-02-02 12:25:12	qpls	irc is not a professional medium
2019-02-02 12:25:24	--	Mode #python [+o nedbat] by ChanServ
2019-02-02 12:25:33	@nedbat	qpls: #python is a civil place
2019-02-02 12:25:44	qpls	I was not uncivil
2019-02-02 12:25:56	qpls	civility and professionalism are two different thigns
2019-02-02 12:26:10	@nedbat	qpls: you've crossed both lines tonight. please tone it down.
2019-02-02 12:26:23	qpls	lines?
2019-02-02 12:26:26	-->	ackpacket (~ackpacket@unaffiliated/ackpacket) has joined #python
2019-02-02 12:26:27	<--	markb1 (~mbiggers@cpe-45-36-35-206.triad.res.rr.com) has quit (Ping timeout: 240 seconds)
2019-02-02 12:26:38	<--	ackpacket (~ackpacket@unaffiliated/ackpacket) has quit (Client Quit)
2019-02-02 12:26:59	@nedbat	qpls: you were rude to Ninpo about encodings, and you've ignore my requests to keep the language professional
2019-02-02 12:27:26	<--	bpremo (~bpremo@2620:10d:c090:200::5:5492) has quit (Ping timeout: 240 seconds)
2019-02-02 12:28:57	<--	uptick (~rue@2001-b011-1000-1234-18e1-7108-8130-06eb.dynamic-ip6.hinet.net) has quit (Quit: uptick)
2019-02-02 12:30:11	<--	thin (9b628300@gateway/web/freenode/ip.155.98.131.0) has quit (Quit: Page closed)
2019-02-02 12:30:24	qpls	nedbat: I was not rude, I was trying to explain to him why he was wrong.
2019-02-02 12:31:22	very_sneaky	you know what, I'm going back and writing unit tests for everything i've written so far. Wasn't expecting them to be useful. Turns out i have a huge number of errors lol
2019-02-02 12:31:23	@nedbat	qpls: after a while you just have to stop. "randomly changing encodings" is not a way to help people. it sounded like ranting. IRC is hard this way: people ask for help, but don't always take advice given.
2019-02-02 12:31:49	qpls	wow...
2019-02-02 12:31:59	qpls	if you are going to start policing language on fucking IRC
2019-02-02 12:32:03	qpls	I will gladly extricate myself
2019-02-02 12:32:06	qpls	byte
2019-02-02 12:32:07	@nedbat	qpls: your choice
2019-02-02 12:32:12	qpls	not really
2019-02-02 12:32:16	@nedbat	qpls: it is.
2019-02-02 12:32:30	-->	marcus1901 (9d340e8d@gateway/web/freenode/ip.157.52.14.141) has joined #python
2019-02-02 12:32:46	-->	waz (~waz@pdpc/supporter/active/waz) has joined #python
2019-02-02 12:33:05	qpls	I didn't realize the fascists had taken over quite yet
2019-02-02 12:33:07	qpls	have fun
2019-02-02 12:33:09	<--	qpls (~qpls@unaffiliated/qpls) has left #python
2019-02-02 12:33:11	@nedbat	qpls: ok
2019-02-02 12:33:20	TML	Well, unless you have some kind of uncontrollable condition which causes you to type profanity against your will, I can't see how it's not. Is there a keyboard version of Tourette?
2019-02-02 12:33:24	TML	too slow
2019-02-02 12:33:34	@nedbat	TML: something's in the water tonight
2019-02-02 12:34:00	TML	nedbat: It happens - less in #python than just about anywhere else, but I'm not terribly surprised it finally found its way here :)
2019-02-02 12:34:27	<--	Praematura (~quassel@96.77.226.30) has quit (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
2019-02-02 12:34:40	--	Mode #python [-o nedbat] by ChanServ
2019-02-02 12:35:07	nedbat	TML: oh, it's been here before, too bad we can't get weather forecasts about these kinds of storms.
2019-02-02 12:35:49	<--	bravoslo (~bravoslo@178.238.229.54) has quit (Read error: Connection reset by peer)
2019-02-02 12:35:52	-->	canarts (~stranac@93-143-169-184.adsl.net.t-com.hr) has joined #python
2019-02-02 12:36:01	-->	Praematura (~quassel@2603:3006:1498:8000:4c23:c8e9:6be0:53a4) has joined #python
2019-02-02 12:36:03	hnsz	are ya getting off? ^^
2019-02-02 12:36:14	-->	bravoslo (~bravoslo@178.238.229.54) has joined #python
2019-02-02 12:37:06	 *	altendky desperately tries to think of a good python question
2019-02-02 12:37:24	energizer	altendky: i think i'd use this https://paste.pound-python.org/show/1jRGeEXZGYohLv72h0kh/
2019-02-02 12:37:27	hnsz	altendky: What is you name?
2019-02-02 12:38:20	altendky	hnsz: why?
2019-02-02 12:38:28	energizer	altendky: what is your quest
2019-02-02 12:38:36	altendky	I mean it's not particularly secret but...
2019-02-02 12:38:40	-->	xdruppi (b517d94d@gateway/web/freenode/ip.181.23.217.77) has joined #python
2019-02-02 12:38:44	<--	stranac (~stranac@93-143-132-47.adsl.net.t-com.hr) has quit (Ping timeout: 250 seconds)
2019-02-02 12:38:52	TML	What...is your favorite color?
2019-02-02 12:38:55	hnsz	altendky: What is your favourite colour?
2019-02-02 12:38:59	xdruppi	why does file.truncate(0) leaves whitespace in my file?
2019-02-02 12:39:09	energizer	altendky: "good python question" https://www.youtube.com/watch?v=pWS8Mg-JWSg
2019-02-02 12:39:45	TML	xdruppi: truncate doesn't change the stream position
2019-02-02 12:40:00	-->	jcalla (~jcallaha@cpe-75-189-208-201.nc.res.rr.com) has joined #python
2019-02-02 12:40:15	TML	xdruppi: Just file.seek(0) first, you'll be fine
2019-02-02 12:40:17	<--	wildlander (~wildlande@unaffiliated/wildlander) has quit (Quit: Konversation terminated!)
2019-02-02 12:40:26	altendky	energizer: I don't like the concept really. If I mean the string '--x-y' I don't really want to write the identifier x_y
2019-02-02 12:40:45	-->	davor_ (~davor@unaffiliated/davor) has joined #python
2019-02-02 12:41:30	altendky	energizer: when dealing with the other direction regarding the click 7 bug I think I advocated against any guessing of the python identifier at all
2019-02-02 12:41:52	<--	xdruppi (b517d94d@gateway/web/freenode/ip.181.23.217.77) has quit (Client Quit)
2019-02-02 12:42:04	<--	davor (~davor@unaffiliated/davor) has quit (Ping timeout: 268 seconds)
2019-02-02 12:42:04	--	davor_ is now known as davor
2019-02-02 12:42:19	<--	wingsorc (~wingsorc@unaffiliated/wingsorc) has quit (Quit: Leaving)
2019-02-02 12:42:24	altendky	xdruppi: why are you not opening for write to truncate to nothing?
2019-02-02 12:42:59	-->	ideasman42 (~ideasman4@ppp118-209-248-152.bras2.mel11.internode.on.net) has joined #python
2019-02-02 12:43:26	<--	divno (~divno@unaffiliated/divno) has quit (Ping timeout: 240 seconds)
2019-02-02 12:43:49	ideasman42	Hi, async io has loop.run_until_complete. How would one run a single step instead of completing
2019-02-02 12:44:03	ideasman42	Im using a system where I don't own the main() event loop
2019-02-02 12:44:37	ideasman42	and would like to step over an async loop every N ticks
2019-02-02 12:44:38	altendky	ideasman42: what environment are you in that you want to run asyncio on top of?
2019-02-02 12:44:46	ideasman42	altendky: blender3d
2019-02-02 12:44:52	<--	sparrowsword (49be6e08@gateway/web/freenode/ip.73.190.110.8) has quit (Quit: Page closed)
2019-02-02 12:44:59	altendky	ideasman42: so qt?
2019-02-02 12:45:07	ideasman42	nah, it opengl
2019-02-02 12:45:14	ideasman42	c/opengl
2019-02-02 12:45:31	altendky	I thought they let you pyqt GUI stuff
2019-02-02 12:45:35	ideasman42	nope
2019-02-02 12:45:38	ideasman42	all own ui
2019-02-02 12:45:41	altendky	And I didn't think opengl was an event loop
2019-02-02 12:45:48	ideasman42	its not
2019-02-02 12:45:53	<--	tm (~sinnlos@unaffiliated/tm) has quit (Ping timeout: 245 seconds)
2019-02-02 12:46:07	pyc	Hi channel! We have setup a community to discuss math, computer science, and algorithms. We plan to discuss interesting topics and problems as well as hold regular online meetups. Please /join #projectfermat if you are interested.
2019-02-02 12:46:07	ideasman42	just meaning we dont use widget toolkit like qt
2019-02-02 12:46:24	ideasman42	since iirc GTK & QT handle own main() loop
2019-02-02 12:47:03	altendky	ideasman42: you want to look at implementing your own loop I think. Quamash does that for asyncio over qt so that's one place you could look to see what sorts of things you should read about.
2019-02-02 12:47:06	ideasman42	so from C I can trigger Python running periodically from our own event loop
2019-02-02 12:47:16	ideasman42	Im doing this already w/ a generator
2019-02-02 12:47:32	ideasman42	it works OK, but am interested to see if asyncio has advantages
2019-02-02 12:47:56	ideasman42	just getting the Py function to next(..) on a generator, works nice
2019-02-02 12:48:29	<--	pi- (~Ohmu@2403:6200:8878:ebe6:bd35:179c:6a1f:91b3) has quit (Remote host closed the connection)
2019-02-02 12:48:32	ideasman42	Would that be: https://docs.python.org/3/library/asyncio-eventloop.html#asyncio.set_event_loop ?
2019-02-02 12:48:50	<--	kadoban (~mud@unaffiliated/kadoban) has quit (Quit: bye)
2019-02-02 12:49:11	altendky	ideasman42: is that what their code mostly implements?
2019-02-02 12:49:17	-->	nurdie (~nurdie@unaffiliated/nurdie) has joined #python
2019-02-02 12:49:21	ideasman42	not sure, looking into it
2019-02-02 12:49:28	ideasman42	but was hoping this would be simple-ish
2019-02-02 12:49:41	altendky	ideasman42: that seems more like picking a loop once you have created it
2019-02-02 12:49:43	<--	swaggboi (~swaggboi@2601:14a:4501:2eb1:3e97:eff:fec1:f0ee) has quit (Quit: :wq!helpexitquit ^C ^C)
2019-02-02 12:50:05	-->	tm (~sinnlos@unaffiliated/tm) has joined #python
2019-02-02 12:50:18	ideasman42	was thinking it could use a future object to do own event loop
2019-02-02 12:50:28	altendky	ideasman42: an event loop isn't about running f() every n milliseconds
2019-02-02 12:50:39	ideasman42	but feels like it might not be intended use
2019-02-02 12:51:26	ideasman42	altendky: ? - ok, I dont know this area well enough to say
2019-02-02 12:51:27	altendky	ideasman42: https://docs.python.org/3/library/asyncio-eventloop.html#asyncio.AbstractEventLoop
2019-02-02 12:52:44	altendky	ideasman42: you could also consider twisted instead of asyncio.  (The basic idea is the same that you would implement a compatible loop (reactor in twisted))
2019-02-02 12:52:57	ideasman42	hrm. this shoudl be vanilla py
2019-02-02 12:53:11	ideasman42	its for testing simulated user input
2019-02-02 12:53:15	<--	lastmanstanding (~arjoonn@137.97.165.204) has quit (Ping timeout: 268 seconds)
2019-02-02 12:53:24	ideasman42	(if that matters)
2019-02-02 12:53:43	-->	owenc (~owen@79-64-10-186.host.pobb.as13285.net) has joined #python
2019-02-02 12:53:46	ideasman42	just to say I dont want my tests to require 3rd party libs
2019-02-02 12:53:47	<--	rpkilby (~rpkilby@2603:3004:629:6000:c828:d334:94ea:ab6d) has quit (Remote host closed the connection)
2019-02-02 12:53:47	<--	nurdie (~nurdie@unaffiliated/nurdie) has quit (Ping timeout: 240 seconds)
2019-02-02 12:53:53	<--	slackcals (~slackcals@unaffiliated/slackcals) has quit (Quit: leaving)
2019-02-02 12:54:09	altendky	ideasman42: there isn't much belief here that stdlib is a good thing to use simply because of it being stdlib.
2019-02-02 12:54:11	ideasman42	seems like writing own loop isn't best intro to asyncio :S
2019-02-02 12:54:23	ideasman42	for py devs - I understand
2019-02-02 12:54:41	ideasman42	but we bundle py, and dont expect devs to install extra libs - to run tests
2019-02-02 12:54:52	altendky	ideasman42: sure, implementing a thing isn't the place to start learning it :]
2019-02-02 12:55:17	altendky	ideasman42: presumably you could bundle libraries if you can bundle python
2019-02-02 12:55:18	<--	vanquish32 (~textual@76-202-87-38.lightspeed.tukrga.sbcglobal.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-02-02 12:55:26	ideasman42	okay, for now I'll probably stick to generator method, come back to this later.
2019-02-02 12:55:30	altendky	Anyways, bed time here
2019-02-02 12:55:36	altendky	Good luck
2019-02-02 12:55:38	ideasman42	altendky: sure, but libs need to justify themsleves
2019-02-02 12:55:50	ideasman42	not just "because I felt like using it on Saturday"
2019-02-02 12:56:02	altendky	ideasman42: and from people that know... They do over asyncio
2019-02-02 12:56:02	ideasman42	download size etc
2019-02-02 12:56:12	<--	miz- (~miz-@unaffiliated/miz-) has quit (Remote host closed the connection)
2019-02-02 12:56:18	setuid	Serious question: What do you do, when you can't stand looking at the same code day over day? How do you keep from getting burned out?
2019-02-02 12:56:22	very_sneaky	to use unittest.assertEqual on two objects of the same class, do I need to overload '=='? at the moment it seems to be comparing the object's memory addresses
2019-02-02 12:56:32	altendky	ideasman42: consider looking at download size before worrying about it
2019-02-02 12:56:34	energizer	very_sneaky: ew no use pytest
2019-02-02 12:56:40	very_sneaky	energizer: i am
2019-02-02 12:56:48	energizer	very_sneaky: `assert a == b`
2019-02-02 12:56:52	ideasman42	altendky: eeh, sure, but its still more to maintain
2019-02-02 12:57:05	ideasman42	ask osx/win32/linux people to upgrade versions when it comes out
2019-02-02 12:57:07	very_sneaky	AssertionError: <secdb.vendors.worldtradingdata.WorldTradingData object at 0x102581c50> != <secdb.vendors.worldtradingdata.WorldTradingData object at 0x1025b0a58>
2019-02-02 12:57:09	very_sneaky	ahh.
2019-02-02 12:57:10	ideasman42	this all adds project overhead
2019-02-02 12:57:48	energizer	very_sneaky: dont use unittest.assertEqual
2019-02-02 12:57:52	<--	horohoro (~horohoro@114-44-87-160.dynamic-ip.hinet.net) has quit (Read error: Connection reset by peer)
2019-02-02 12:57:58	<--	owenc (~owen@79-64-10-186.host.pobb.as13285.net) has quit (Ping timeout: 244 seconds)
2019-02-02 12:58:00	energizer	very_sneaky: (i mean dont use unittest at all)
2019-02-02 12:58:08	very_sneaky	energizer: why's that?
2019-02-02 12:58:20	energizer	very_sneaky: pytest is way nicer
2019-02-02 12:58:25	ideasman42	setuid: refactor and improve the code over time?
2019-02-02 12:58:35	very_sneaky	energizer: pytest supports unittest?
2019-02-02 12:58:37	ideasman42	if its so bad
2019-02-02 12:58:47	energizer	very_sneaky: why is unittest involved at all?
2019-02-02 12:59:04	setuid	ideasman42: the code isn't bad, but... sometimes it's hard to stay motivated to keep pushing it further.
2019-02-02 12:59:15	very_sneaky	energizer: idk, i was following the documentation and then at your suggestion, using pytest to evaluate the test cases lol
2019-02-02 12:59:44	energizer	very_sneaky: oh sorry i wasnt clear. most of us prefer to use pytest to write the tests as well
2019-02-02 12:59:58	<--	syscaller (~syscaller@snegw.os3.su) has quit (Remote host closed the connection)
2019-02-02 13:00:05	very_sneaky	ah, okay
2019-02-02 13:00:11	-->	syscaller (~syscaller@snegw.os3.su) has joined #python
2019-02-02 13:00:33	setuid	I tried to get my peers to look at making pytest/hypothesis a mandatory part of each git commit (eg: follow every commit with a unit test that matches the  commit), but it's all python 2.7, and pytest/hypothesis vomit unicode errors all over the place, so that ended quick.
2019-02-02 13:00:41	energizer	(there are a few who disagree, but ..)
2019-02-02 13:01:19	ideasman42	setuid: if you have users, they kick you to progress
2019-02-02 13:01:23	-->	smallick (~smallick@49.14.171.244) has joined #python
2019-02-02 13:01:32	energizer	very_sneaky: but anyway, if you want to assert equality over two objects, they either need to have defined __eq__ or they'll fall back to using memory id
2019-02-02 13:01:32	 *	ideasman42 finds it motivating, but feels OT
2019-02-02 13:02:01	energizer	very_sneaky: did you write those classes yourself?
2019-02-02 13:02:50	<--	Ruhan (uid76353@gateway/web/irccloud.com/x-xaapxyhptvtlxifu) has quit (Quit: Connection closed for inactivity)
2019-02-02 13:03:01	<--	andylavarre (~andy@mobile-166-171-185-247.mycingular.net) has quit (Remote host closed the connection)
2019-02-02 13:03:04	setuid	I think I'm just burned out. I need a fresh start, or a fresh view on things.
2019-02-02 13:03:19	very_sneaky	energizer: yep
2019-02-02 13:03:41	very_sneaky	energizer: right, so i do need to overload the equals operator
2019-02-02 13:03:46	very_sneaky	gotcha
2019-02-02 13:03:56	-->	ksdnn (b2319acd@gateway/web/freenode/ip.178.49.154.205) has joined #python
2019-02-02 13:04:03	ksdnn	how can __getitem__ method cause an infinite loop?
2019-02-02 13:04:07	energizer	very_sneaky: many of us like to write our classes using http://attrs.org , which sets up good default methods automatically
2019-02-02 13:04:19	<--	mintograde (~mintograd@47.201.163.72) has quit (Ping timeout: 250 seconds)
2019-02-02 13:04:30	<--	davr0s (~textual@host109-150-222-15.range109-150.btcentralplus.com) has quit (Ping timeout: 246 seconds)
2019-02-02 13:04:47	energizer	ksdnn: like if you have `def __getitem__(self, name): return self[name]` thatll overflow
2019-02-02 13:04:55	very_sneaky	energizer: okay i'll take a look
2019-02-02 13:05:14	<--	segy (segfault@pdpc/supporter/active/segy) has quit (Quit: ZNC - http://znc.in)
2019-02-02 13:05:46	-->	rkazak (~rkazak@c-71-202-98-21.hsd1.ca.comcast.net) has joined #python
2019-02-02 13:06:18	<--	NkLMtwe (~root@93.75.221.81) has quit (Ping timeout: 245 seconds)
2019-02-02 13:07:31	-->	Spacew00t (~textual@2601:640:8301:cb4:bc29:4ab6:8132:90ab) has joined #python
2019-02-02 13:09:09	-->	justanotheruser (~justanoth@unaffiliated/justanotheruser) has joined #python
2019-02-02 13:09:17	<--	YaknotiS (~YaknotiS@hx-dnat-252.ebi.ac.uk) has quit (Ping timeout: 268 seconds)
2019-02-02 13:10:10	-->	nurdie (~nurdie@unaffiliated/nurdie) has joined #python
2019-02-02 13:10:11	<--	Arcaelyx (~Arcaelyx@2604:2000:f146:7c00:9c36:b043:3e97:3954) has quit (Quit: Textual IRC Client: www.textualapp.com)
2019-02-02 13:10:45	-->	randominternetus (~randomint@unaffiliated/randominternetus) has joined #python
2019-02-02 13:11:10	-->	segy (segfault@pdpc/supporter/active/segy) has joined #python
2019-02-02 13:13:24	<--	monksam (~monksam@gateway/tor-sasl/monksam) has quit (Quit: leaving)
2019-02-02 13:13:35	-->	greenmars (~greenmars@2601:200:c000:6933:f016:b0f6:7534:c72c) has joined #python
2019-02-02 13:14:18	<--	nurdie (~nurdie@unaffiliated/nurdie) has quit (Ping timeout: 246 seconds)
2019-02-02 13:14:35	-->	lastmanstanding (~arjoonn@103.79.223.74) has joined #python
2019-02-02 13:14:51	-->	_gobostone (~Ace@70-59-7-75.hlrn.qwest.net) has joined #python
2019-02-02 13:17:53	<--	Melite (~Melite@unaffiliated/melite) has quit (Read error: Connection reset by peer)
2019-02-02 13:18:30	<--	gobostone (~Ace@216-160-162-171.hlrn.qwest.net) has quit (Ping timeout: 272 seconds)
2019-02-02 13:20:11	-->	drincruz (~drincruz@cpe-23-243-236-195.socal.res.rr.com) has joined #python
2019-02-02 13:21:25	<--	smallick (~smallick@49.14.171.244) has quit (Quit: jmIrc-m v0.34a by Archangel (http://jmirc-m.net.ru/en/))
2019-02-02 13:21:38	<--	Nightwing52 (~Thunderbi@tx-76-1-83-50.dhcp.embarqhsd.net) has quit (Ping timeout: 250 seconds)
2019-02-02 13:21:45	-->	cdown (~cdown@rrcs-108-176-24-99.nyc.biz.rr.com) has joined #python
2019-02-02 13:24:25	-->	drazan (~drazan@23.252.59.120) has joined #python
2019-02-02 13:26:09	ksdnn	why can "x in y" test take a very long time?
2019-02-02 13:27:02	nomic	dependent on length of y
2019-02-02 13:27:08	FunkyBob	and type
2019-02-02 13:27:19	nomic	y is a list if it's 10k .. its gonna be slightly delayed
2019-02-02 13:27:36	FunkyBob	if it's a set, it'll likely be faster
2019-02-02 13:27:46	ksdnn	y is my object
2019-02-02 13:27:58	nomic	post code .. pastebin
2019-02-02 13:28:06	ksdnn	code of what?
2019-02-02 13:28:09	nomic	also .. 'where is y' object
2019-02-02 13:28:20	nomic	your problem/issue .. where you do it
2019-02-02 13:28:25	nomic	x in y
2019-02-02 13:28:51	nomic	if it has to retrieve the object before the test .. that could be the delay (not 'x in y')
2019-02-02 13:28:56	Omega037	if you are worried about the timing, you can use tqdm package to wrap an iterator
2019-02-02 13:29:05	Omega037	that gives you a progress bar and estimated time to complete
2019-02-02 13:29:29	ksdnn	https://paste.pound-python.org/show/Uze8xY4ByWJufdPvjeJf/
2019-02-02 13:29:56	CrtxReavr	Omega037, and to think I wrote my own.
2019-02-02 13:30:13	-->	CarlFK (~carl@c-98-223-145-234.hsd1.il.comcast.net) has joined #python
2019-02-02 13:30:14	energizer	ya tqdm's real slick
2019-02-02 13:30:24	FunkyBob	wow... don't see that old py2 >>stderr syntax much
2019-02-02 13:30:32	nomic	self.cache .. could be huge
2019-02-02 13:30:43	-->	nurdie (~nurdie@unaffiliated/nurdie) has joined #python
2019-02-02 13:30:44	setuid	mmm, tqdm. :)
2019-02-02 13:30:56	-->	Nightwing52 (~Thunderbi@tx-76-1-83-50.dhcp.embarqhsd.net) has joined #python
2019-02-02 13:31:12	CarlFK	where is the current expected place to put virtenv dirs?  something like project/virt
2019-02-02 13:31:21	ksdnn	it is not used anyway
2019-02-02 13:31:40	energizer	CarlFK: either project/venv or some people like  ~/.envs
2019-02-02 13:32:10	CarlFK	energizer:  thanks  project/venv is what I was trying to remember
2019-02-02 13:32:19	FunkyBob	CarlFK: pipenv uses ~/.local/shared/virtualenvs/
2019-02-02 13:34:27	-->	pi- (~Ohmu@mx-ll-183.89.36-35.dynamic.3bb.co.th) has joined #python
2019-02-02 13:35:04	<--	rkazak (~rkazak@c-71-202-98-21.hsd1.ca.comcast.net) has quit (Ping timeout: 246 seconds)
2019-02-02 13:35:48	<--	nurdie (~nurdie@unaffiliated/nurdie) has quit (Ping timeout: 268 seconds)
2019-02-02 13:36:18	<--	waz (~waz@pdpc/supporter/active/waz) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-02-02 13:36:22	ksdnn	it seems defining __contains__ method did the tricj
2019-02-02 13:36:34	-->	rippa (~rippa@ppp-vpdn-37.1.85.157.yarnet.ru) has joined #python
2019-02-02 13:37:24	<--	cdby (~cdby@unaffiliated/cdby) has quit (Quit: Lost terminal)
2019-02-02 13:37:28	-->	Onwarion (~Onwarion@unaffiliated/onwarion) has joined #python
2019-02-02 13:37:32	<--	amosbird (~amosbird@123.206.66.49) has quit (Quit: ZNC 1.7.1 - https://znc.in)
2019-02-02 13:37:44	-->	amosbird (~amosbird@123.206.66.49) has joined #python
2019-02-02 13:39:13	<--	greenmars (~greenmars@2601:200:c000:6933:f016:b0f6:7534:c72c) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-02-02 13:39:24	-->	kurahaupo (~kurahaupo@118.148.131.143) has joined #python
2019-02-02 13:40:03	<--	mumixam (~m@unaffiliated/mumixam) has quit (Ping timeout: 252 seconds)
2019-02-02 13:40:56	<--	suffer (spider@gnu.slash.linuxit.us) has quit (Ping timeout: 240 seconds)
2019-02-02 13:41:04	<--	purplex88 (~purplex88@unaffiliated/purplex88) has quit (Quit: Going offline, see ya! (www.adiirc.com))
2019-02-02 13:41:58	<--	syscaller (~syscaller@snegw.os3.su) has quit (Remote host closed the connection)
2019-02-02 13:42:10	-->	syscaller (~syscaller@snegw.os3.su) has joined #python
2019-02-02 13:42:43	-->	suffer (spider@gnu.slash.linuxit.us) has joined #python
2019-02-02 13:42:50	<--	GreaseMonkey (greaser@unaffiliated/greasemonkey) has quit (Remote host closed the connection)
2019-02-02 13:43:05	-->	purplex88 (~purplex88@unaffiliated/purplex88) has joined #python
2019-02-02 13:43:30	<--	xcm (~xcm@ipa210.225.tellas.gr) has quit (Remote host closed the connection)
2019-02-02 13:43:32	-->	laxask (~lax@unaffiliated/laxask) has joined #python
2019-02-02 13:43:44	<--	Nightwing52 (~Thunderbi@tx-76-1-83-50.dhcp.embarqhsd.net) has quit (Ping timeout: 250 seconds)
2019-02-02 13:44:05	-->	mumixam (~m@unaffiliated/mumixam) has joined #python
2019-02-02 13:44:11	-->	xcm (~xcm@ipa210.225.tellas.gr) has joined #python
2019-02-02 13:44:22	-->	Nightwing52 (~Thunderbi@tx-76-1-83-50.dhcp.embarqhsd.net) has joined #python
2019-02-02 13:44:50	-->	rkazak (~rkazak@c-71-202-98-21.hsd1.ca.comcast.net) has joined #python
2019-02-02 13:45:22	-->	tuxd00d (~tuxd00d@unaffiliated/tuxd00d) has joined #python
2019-02-02 13:45:45	<--	__charly__ (~charly@104-184-3-192.lightspeed.austtx.sbcglobal.net) has quit (Quit: ZZZ)
2019-02-02 13:46:07	<--	purplex88 (~purplex88@unaffiliated/purplex88) has quit (Client Quit)
2019-02-02 13:46:15	-->	__charly__ (~charly@104-184-3-192.lightspeed.austtx.sbcglobal.net) has joined #python
2019-02-02 13:46:59	-->	nirakara (~nurks@108.61.174.237) has joined #python
2019-02-02 15:59:39	-->	gwosix (~gwosix@112.209.186.56) has joined #python
2019-02-02 15:59:39	--	Topic for #python is "Anything about Python is on-topic. Don't paste, use https://paste.pound-python.org/ | Be nice: https://j.mp/psf-coc | Tutorial: https://j.mp/MCAhYx | New programmer? https://j.mp/23X7emF | Local user groups: https://j.mp/1Mq06bF | #python-fr #python.de #python-es #python.tw #python-br #python-nl #python-ir #python.it #python-ro #python-india #python-hu #python-dk"
2019-02-02 15:59:39	--	Topic set by Yhg1s (thomas@python/psf/thomas) on Thu, 22 Nov 2018 22:08:54
2019-02-02 15:59:39	--	Channel #python: 1831 nicks (0 ops, 0 voices, 1831 normals)
2019-02-02 15:59:41	--	Channel created on Sun, 26 Nov 2006 14:42:41
2019-02-02 16:00:19	<--	lankanmon (~LKNnet@CPE64777d632383-CM64777d632380.cpe.net.cable.rogers.com) has quit (Quit: Left...)
2019-02-02 16:00:25	gwosix	should i install black, python-language-server, pylint, and jedi in my neovim venv or in the global one?
2019-02-02 16:00:43	<--	kurahaupo (~kurahaupo@118.148.140.234) has quit (Read error: Connection reset by peer)
2019-02-02 16:00:49	-->	n13z (qubth@unaffiliated/n13z) has joined #python
2019-02-02 16:00:51	energizer	gwosix: what's 'the global one'?
2019-02-02 16:01:00	gwosix	my global venv
2019-02-02 16:01:05	Wulf	what's that
2019-02-02 16:01:06	energizer	what's a global venv
2019-02-02 16:01:14	-->	kurahaupo (~kurahaupo@118.148.140.234) has joined #python
2019-02-02 16:01:14	[Tritium]	gwosix: jedi likes to live in the venv of the modules you are developing with, pylint doesn't care
2019-02-02 16:01:27	-->	lankanmon (~LKNnet@CPE64777d632383-CM64777d632380.cpe.net.cable.rogers.com) has joined #python
2019-02-02 16:01:48	_alx_	gwosix: you mean your base environment?
2019-02-02 16:01:51	client35	woah, this newer web version of kiwi is nice
2019-02-02 16:02:44	gwosix	_alx_: not really... i just use a venv globaly so that i don't litter my `~/.local` with python stuff...
2019-02-02 16:02:52	-->	Huitzi (~Huitzi@2a01:cb14:490:8700:f053:e35f:5b7:8316) has joined #python
2019-02-02 16:02:56	gwosix	and pipsi
2019-02-02 16:03:13	energizer	honestly i've never understood how pylint and jedi do their thign
2019-02-02 16:03:21	Wulf	gwosix: you should use many venvs
2019-02-02 16:03:37	gwosix	Wulf, i do
2019-02-02 16:03:46	gwosix	more like: pipsi does it for me
2019-02-02 16:03:48	energizer	gwosix: one per project, not one per neovim
2019-02-02 16:04:02	gwosix	neovim wants one to itself as well though
2019-02-02 16:04:15	gwosix	for pynvim
2019-02-02 16:04:20	energizer	i dunno then
2019-02-02 16:04:40	[Tritium]	energizer: pylint just processes your module as text.  jedi ...does something, i think it imports the world, and responds to ide hooks
2019-02-02 16:04:45	_alx_	that sounds a little strange to me…
2019-02-02 16:05:00	gwosix	_alx_: what does?
2019-02-02 16:05:33	client35	serious question, django or flask?
2019-02-02 16:05:49	_alx_	jedi recursively searches… everything, not the best way. Guido is quoted to say something along the lines of it being bad on jedi's website :P
2019-02-02 16:05:49	[Tritium]	client35: have you developed for the web before with python?
2019-02-02 16:06:01	-->	deadlysin (~deadlysin@unaffiliated/deadlysin) has joined #python
2019-02-02 16:06:02	client35	nope [Tritium]
2019-02-02 16:06:07	[Tritium]	client35: django
2019-02-02 16:06:09	energizer	client35: django
2019-02-02 16:06:25	client35	I'm already learning with django though b/c it seems more interesting than flask
2019-02-02 16:06:27	_alx_	django & flask
2019-02-02 16:06:35	client35	someone said that flask is more for setting up a quick api
2019-02-02 16:06:36	-->	divno (~divno@unaffiliated/divno) has joined #python
2019-02-02 16:06:42	client35	my colleague, rather
2019-02-02 16:06:44	pyc	Why do you recommend Django?
2019-02-02 16:06:56	-->	rkazak (~rkazak@c-71-202-98-21.hsd1.ca.comcast.net) has joined #python
2019-02-02 16:07:06	_alx_	django comes with more tools out of the box
2019-02-02 16:07:16	_alx_	with flask, it. can be faster but you have to be more careful
2019-02-02 16:07:18	energizer	yeah flask is also useful for providing implicit global mutable state
2019-02-02 16:07:26	energizer	;P
2019-02-02 16:07:43	client35	I really love the idea of templating; I'm following a tut and I'm at the part where we're starting to incorporate models and templates which is pretty cool
2019-02-02 16:07:58	_alx_	class based views?
2019-02-02 16:08:07	_alx_	rock on :)
2019-02-02 16:08:25	<--	AbleBacon (~AbleBacon@unaffiliated/ablebacon) has quit (Quit: Leaving)
2019-02-02 16:08:39	-->	mgt (~mgt@unaffiliated/mgt) has joined #python
2019-02-02 16:08:39	energizer	obeythetestinggoat.com is a good django book (except it should use pytest instead of unittest)
2019-02-02 16:09:08	[Tritium]	django is better for new web developers since it makes design decisions for you, letting you focus on getting your project code finished - not which authentication module you need, or how to handel DB.  Its better since it has opinions so you dont have to (before you know enough to have valid opinions)
2019-02-02 16:09:30	<--	deadlysin (~deadlysin@unaffiliated/deadlysin) has quit (Client Quit)
2019-02-02 16:09:32	-->	rendar (~rendar@unaffiliated/rendar) has joined #python
2019-02-02 16:09:32	_alx_	energizer: it's FREE :O why haven't I ever read this book?!?!
2019-02-02 16:09:46	[Tritium]	energizer: django itself provides unittest integration, doesn't it?
2019-02-02 16:10:06	_alx_	[Tritium]: it didn't always, but it does now
2019-02-02 16:10:11	-->	owenc (~owen@79-64-10-186.host.pobb.as13285.net) has joined #python
2019-02-02 16:10:47	energizer	[Tritium]: dunno, personally i wouldnt use unittest regardless
2019-02-02 16:11:14	client35	I love being able to do something like {{ my_text }} to call something from a view
2019-02-02 16:11:33	-->	Wonny (~Wonny@unaffiliated/wonny) has joined #python
2019-02-02 16:11:33	<--	katiex7 (~katiex7@ip72-196-214-135.dc.dc.cox.net) has quit (Remote host closed the connection)
2019-02-02 16:11:35	client35	I mean, that's probably a limited use case but it really shows the power
2019-02-02 16:11:36	_alx_	or {% do anything you want %}
2019-02-02 16:11:40	client35	^^
2019-02-02 16:11:41	-->	nurdie (~nurdie@unaffiliated/nurdie) has joined #python
2019-02-02 16:11:52	[Tritium]	client35: it sounds like you already have opinions on web development
2019-02-02 16:12:02	<--	rkazak (~rkazak@c-71-202-98-21.hsd1.ca.comcast.net) has quit (Ping timeout: 272 seconds)
2019-02-02 16:12:09	client35	I know very little html css and no JS at all
2019-02-02 16:12:13	<--	kurahaupo (~kurahaupo@118.148.140.234) has quit (Read error: Connection reset by peer)
2019-02-02 16:12:25	[Tritium]	neither flask nor django will help you there
2019-02-02 16:12:28	client35	I'm know much more about py than others
2019-02-02 16:12:34	client35	Yep, I know that for sure
2019-02-02 16:12:47	-->	kurahaupo (~kurahaupo@118.148.140.234) has joined #python
2019-02-02 16:12:53	client35	bash is probably my other language just b/c linux
2019-02-02 16:13:26	gwosix	does regex count as a lang?
2019-02-02 16:13:36	[Tritium]	(for completeness sake, I don't use django anymore, and rarely use flask, most of my recent web based work has been aiohttp)
2019-02-02 16:13:37	gwosix	(it's even slower than py but it does, doesn't it?)
2019-02-02 16:13:49	[Tritium]	gwosix: a DSL, yes
2019-02-02 16:13:58	pyc	If I want to design a REST API that sits between the client and say MongoDB or Elasticsearch, is Django still a good choice?
2019-02-02 16:14:24	-->	lbalhar (~lbalhar@93.185.13.26) has joined #python
2019-02-02 16:14:24	pyc	I have often read that Django does not support NoSQL officially.
2019-02-02 16:14:24	_alx_	pyc it's a great choice
2019-02-02 16:14:26	<--	methuzla (~methuzla@98.125.216.41) has quit (Ping timeout: 240 seconds)
2019-02-02 16:14:28	-->	czart (~czart@acco3.neoplus.adsl.tpnet.pl) has joined #python
2019-02-02 16:14:30	[Tritium]	pyc: if only because someone has probably done all the work for you already, yes
2019-02-02 16:14:33	<--	owenc (~owen@79-64-10-186.host.pobb.as13285.net) has quit (Ping timeout: 246 seconds)
2019-02-02 16:15:25	[Tritium]	pyc: django does not ship with any help for nosql, which does not mean you cant use it.  by the same logic, flask apps can't use any database :)
2019-02-02 16:15:50	<--	nurdie (~nurdie@unaffiliated/nurdie) has quit (Ping timeout: 250 seconds)
2019-02-02 16:16:43	<--	veevax (~veevax@212-198-32-77.rev.numericable.fr) has quit (Remote host closed the connection)
2019-02-02 16:17:00	pyc	[Tritium]: You mean in both Django and Flask, it is my responsibility to use say a MongoDB/Elasticsearch library, make calls to MongoDB/Elasticsearch and do whatever I want with the response. Am I right?
2019-02-02 16:17:07	_alx_	[Tritium]: i've just been reading up on aiohttp, what was the deciding factor for you to change?
2019-02-02 16:17:19	energizer	pyc: y mongo
2019-02-02 16:17:52	pyc	energizer: could you please elaborate? did you mean to ask why am I choosing MongoDB?
2019-02-02 16:18:02	energizer	pyc: ya
2019-02-02 16:18:09	[Tritium]	pyc: yes.  though, the confluence for "popular framework" "popular backend" and "common task" means there is probably a library to do what you want.
2019-02-02 16:18:24	-->	tvm (~tvm@2a02:8308:f0c1:d00:d41d:b98:2452:cad6) has joined #python
2019-02-02 16:19:13	pyc	energizer: We have a service that takes data from data sources and stores it in multiple databases such as MongoDB, Elasticsearch, filesystem. So I need to develop a REST API and frontend on top of these databases.
2019-02-02 16:19:18	<--	asdfgh (~asdfgh@net-93-67-24-234.cust.vodafonedsl.it) has quit (Ping timeout: 250 seconds)
2019-02-02 16:19:39	client35	why not use something like connectors to connect multiple apis?
2019-02-02 16:19:42	pyc	Somewhat like say Grafana which supports multiple datastores. I have to do something similar that can support multiple datastores.
2019-02-02 16:20:04	pyc	client35: Can you recommend some connector lib that can do it for me?
2019-02-02 16:20:35	client35	well, it depends on your data sources though
2019-02-02 16:20:46	-->	panikovsky (~panikovsk@109.165.21.151) has joined #python
2019-02-02 16:21:39	client35	I found this though, not sure if it's any use or you're already using it https://www.mongodb.com/blog/post/introducing-mongo-connector
2019-02-02 16:21:49	<--	chippies (~wjs@dsl-197-245-189-195.voxdsl.co.za) has quit (Quit: leaving)
2019-02-02 16:22:37	<--	kurahaupo (~kurahaupo@118.148.140.234) has quit (Read error: Connection reset by peer)
2019-02-02 16:22:49	-->	Fager (~medard@147.175.213.164) has joined #python
2019-02-02 16:22:59	-->	kurahaupo (~kurahaupo@118.148.140.234) has joined #python
2019-02-02 16:24:05	<--	idontneedanick (~idontneed@h-184-235.A189.priv.bahnhof.se) has quit (Remote host closed the connection)
2019-02-02 16:24:40	-->	idontneedanick (~idontneed@h-184-235.A189.priv.bahnhof.se) has joined #python
2019-02-02 16:27:23	-->	smallick (~smallick@49.14.162.192) has joined #python
2019-02-02 16:28:47	<--	idontneedanick (~idontneed@h-184-235.A189.priv.bahnhof.se) has quit (Ping timeout: 240 seconds)
2019-02-02 16:29:26	<--	byanka (~|byanka|@node-1w7jr9qkhp7xgs2n7s66px5hn.ipv6.telus.net) has quit (Ping timeout: 240 seconds)
2019-02-02 16:29:47	<--	dinis (~root@220.136.27.77.dynamic.reverse-mundo-r.com) has quit (Ping timeout: 272 seconds)
2019-02-02 16:31:18	-->	rkazak (~rkazak@c-71-202-98-21.hsd1.ca.comcast.net) has joined #python
2019-02-02 16:31:21	<--	codesoup (~codesoup@174.119.180.211) has quit (Remote host closed the connection)
2019-02-02 16:31:47	<--	dylrich (~dylrich@65.128.40.51) has quit (Quit: Konversation terminated!)
2019-02-02 16:31:51	-->	platvoeten (~platvoete@178-85-122-247.dynamic.upc.nl) has joined #python
2019-02-02 16:32:16	-->	nurdie (~nurdie@unaffiliated/nurdie) has joined #python
2019-02-02 16:33:10	-->	MasterPiece (~masterpie@unaffiliated/masterpiece) has joined #python
2019-02-02 16:34:55	<--	kurahaupo (~kurahaupo@118.148.140.234) has quit (Read error: Connection reset by peer)
2019-02-02 16:35:10	-->	HZun (~HZun@0x3ec721e2.osd.customer.dk.telia.net) has joined #python
2019-02-02 16:35:29	<--	rkazak (~rkazak@c-71-202-98-21.hsd1.ca.comcast.net) has quit (Ping timeout: 244 seconds)
2019-02-02 16:35:54	pyc	energizer: do you use Python for solving algorithm and math problems too? I ask because I see you in ##math, ##algorithms, and ##projectfermat as well.
2019-02-02 16:36:22	<--	nurdie (~nurdie@unaffiliated/nurdie) has quit (Ping timeout: 246 seconds)
2019-02-02 16:36:25	-->	georgios (~georgios@unaffiliated/anaphaxeton) has joined #python
2019-02-02 16:36:26	<--	italic (~italic@unaffiliated/italic/x-8958156) has quit (Ping timeout: 240 seconds)
2019-02-02 16:37:42	<--	lambda-11235 (~lambda-11@207.183.239.54) has quit (Quit: Bye)
2019-02-02 16:37:42	<--	Spaaaaaaaaaaaace (~Spaaaaaaa@unaffiliated/spaaaaaaaaaaaace) has quit (Read error: Connection reset by peer)
2019-02-02 16:37:52	<--	mnemonicj (~mnemonicj@114-32-59-180.HINET-IP.hinet.net) has quit (Quit: bye!)
2019-02-02 16:37:58	<--	xcm (~xcm@ipa210.225.tellas.gr) has quit (Remote host closed the connection)
2019-02-02 16:38:17	-->	kurahaupo (~kurahaupo@118.148.140.234) has joined #python
2019-02-02 16:38:29	-->	xcm (~xcm@ipa210.225.tellas.gr) has joined #python
2019-02-02 16:38:57	<--	RedOrangeZ (~RedOrange@c-73-175-150-25.hsd1.pa.comcast.net) has quit (Ping timeout: 268 seconds)
2019-02-02 16:40:22	<--	client35 (88310ff7@gateway/web/cgi-irc/kiwiirc.com/ip.136.49.15.247) has quit (Remote host closed the connection)
2019-02-02 16:40:33	<--	libertyprime (~libertypr@101.98.42.91) has quit (Remote host closed the connection)
2019-02-02 16:40:48	<--	taurgal (~taurgal@176-170-20-144.abo.bbox.fr) has quit (Ping timeout: 268 seconds)
2019-02-02 16:41:38	<--	jcarl43 (~jcarl@S01061c1b689d9d2f.vc.shawcable.net) has quit (Read error: Connection reset by peer)
2019-02-02 16:41:40	-->	dendazen (~dendazen@pool-72-76-93-243.nwrknj.fios.verizon.net) has joined #python
2019-02-02 16:41:40	-->	codesoup (~codesoup@174.119.180.211) has joined #python
2019-02-02 16:41:50	<--	NightTrain (coffee@gateway/vpn/privateinternetaccess/b) has quit (Quit: Lost terminal)
2019-02-02 16:44:08	-->	mnemonicj (~mnemonicj@114-32-59-180.HINET-IP.hinet.net) has joined #python
2019-02-02 16:46:21	<--	dendazen (~dendazen@pool-72-76-93-243.nwrknj.fios.verizon.net) has quit (Ping timeout: 268 seconds)
2019-02-02 16:47:14	<--	niburu (~sea@gateway/tor-sasl/niburu) has quit (Quit: niburu)
2019-02-02 16:47:14	-->	atrigent (~ari-_-e@unaffiliated/atrigent) has joined #python
2019-02-02 16:47:47	-->	Druive (~Druive@84-112-223-198.cable.dynamic.surfer.at) has joined #python
2019-02-02 16:47:58	<--	him-cesjf (~cesjf@unaffiliated/himcesjf) has quit (Read error: Connection reset by peer)
2019-02-02 16:48:42	<--	Druive (~Druive@84-112-223-198.cable.dynamic.surfer.at) has quit (Client Quit)
2019-02-02 16:48:47	-->	greenmars (~greenmars@c-73-235-166-162.hsd1.ca.comcast.net) has joined #python
2019-02-02 16:48:54	<--	ackpacket (~ackpacket@unaffiliated/ackpacket) has quit (Quit: My puter has gone to sleep. ZZZzzz…)
2019-02-02 16:50:07	<--	dotgourav (~dotgourav@14.143.74.66) has quit (Ping timeout: 240 seconds)
2019-02-02 16:50:16	-->	nibble_zero (~nibble_ze@37.244.231.177) has joined #python
2019-02-02 16:50:26	-->	him-cesjf (~cesjf@unaffiliated/himcesjf) has joined #python
2019-02-02 16:51:55	-->	atha (~tiago_ath@unaffiliated/athayde) has joined #python
2019-02-02 16:51:56	<--	thallada (~thallada@fsf/member/thallada) has quit (Ping timeout: 272 seconds)
2019-02-02 16:53:03	<--	kurahaupo (~kurahaupo@118.148.140.234) has quit (Read error: Connection reset by peer)
2019-02-02 16:53:14	<--	miz- (~miz-@unaffiliated/miz-) has quit (Read error: Connection reset by peer)
2019-02-02 16:53:33	-->	kaffeetrauma (~Thunderbi@p200300CF33D79100EA2AEAFFFE805F93.dip0.t-ipconnect.de) has joined #python
2019-02-02 16:53:51	-->	miz- (~miz-@unaffiliated/miz-) has joined #python
2019-02-02 16:54:26	-->	thallada (~thallada@fsf/member/thallada) has joined #python
2019-02-02 16:55:42	<--	codesoup (~codesoup@174.119.180.211) has quit (Ping timeout: 250 seconds)
2019-02-02 16:57:26	<--	Ai9zO5AP (~BQcdf9eiZ@95.213.148.98) has quit (Ping timeout: 240 seconds)
2019-02-02 16:57:35	-->	kurahaupo (~kurahaupo@118.148.140.234) has joined #python
2019-02-02 16:59:03	-->	rsrx (~rsrx@mx-ll-180.183.74-201.dynamic.3bb.co.th) has joined #python
2019-02-02 16:59:07	<--	volkov (~volkov@gateway/tor-sasl/volkov) has quit (Remote host closed the connection)
2019-02-02 16:59:19	<--	n13z (qubth@unaffiliated/n13z) has quit (Ping timeout: 268 seconds)
2019-02-02 16:59:55	-->	Forsaken87 (~quassel@2a02:908:1869:4b20:f4b0:188b:cefd:b063) has joined #python
2019-02-02 17:00:41	-->	n13z (qubth@unaffiliated/n13z) has joined #python
2019-02-02 17:04:23	-->	pyn (~pyn@dornkirk.twistedmatrix.com) has joined #python
2019-02-02 17:05:03	-->	andys_ (~andys@S0106cc2de0b66d21.gv.shawcable.net) has joined #python
2019-02-02 17:05:44	-->	AlwaysInTime (~AlwaysInT@cgn85-194-8-122.bredband.comhem.se) has joined #python
2019-02-02 17:06:05	-->	rbanffy (~rbanffy@37.228.254.72) has joined #python
2019-02-02 17:06:53	-->	ciph3r (uid218951@gateway/web/irccloud.com/x-zbevnyzqdkgjaxqb) has joined #python
2019-02-02 17:07:39	<--	smallick (~smallick@49.14.162.192) has left #python
2019-02-02 17:07:41	<--	atha (~tiago_ath@unaffiliated/athayde) has quit (Quit: leaving)
2019-02-02 17:08:42	<--	cnsvc (~cnsvc@gateway/tor-sasl/cnsvc) has quit (Quit: WeeChat 2.3)
2019-02-02 17:09:12	-->	dotgourav (~dotgourav@14.143.74.66) has joined #python
2019-02-02 17:09:42	<--	Wonny (~Wonny@unaffiliated/wonny) has quit (Ping timeout: 268 seconds)
2019-02-02 17:10:09	-->	Katana (~hentai@unaffiliated/katana) has joined #python
2019-02-02 17:10:50	-->	dheiberg (~Dhdavvie@66.231.143.150.dyn.plus.net) has joined #python
2019-02-02 17:12:19	<--	kurahaupo (~kurahaupo@118.148.140.234) has quit (Read error: Connection reset by peer)
2019-02-02 17:12:41	<--	melissa666 (~melissa66@2601:603:4d00:18ec::d6d1) has quit (Remote host closed the connection)
2019-02-02 17:12:53	-->	kurahaupo (~kurahaupo@118.148.140.234) has joined #python
2019-02-02 17:13:28	-->	Praematura_ (~quassel@2603:3006:1498:8000:89c1:5ffb:115e:3709) has joined #python
2019-02-02 17:14:07	-->	}ls{ (~kalle@unaffiliated/ls/x-8089558) has joined #python
2019-02-02 17:15:10	<--	micahscopes (~micahscop@97-116-48-130.mpls.qwest.net) has quit (Quit: micahscopes)
2019-02-02 17:15:34	-->	anthepro (~staljin@unaffiliated/anthepro) has joined #python
